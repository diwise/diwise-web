package components

import (
	"github.com/diwise/diwise-web/internal/pkg/presentation/locale"
	"github.com/diwise/diwise-web/internal/pkg/presentation/web/assets"
)

script toggleDropdownType() {
    //Dropdown Typ
    var dropdownMenuType = document.getElementById("dropdownMenuType");
    dropdownMenuType.classList.toggle("hidden");
}

script toggleDropdownFillingLevel() {
    var dropdownMenuFillingLevel = document.getElementById("dropdownMenuFillingLevel");
    dropdownMenuFillingLevel.classList.toggle("hidden");
}

script toggleDropdownArea() {
    var dropdownMenuArea = document.getElementById("dropdownMenuArea");
    dropdownMenuArea.classList.toggle("hidden");
}

//Stäng om man klickar utanför

/*//Dropdown Område
  function toggleDropdown() {
      var dropdownMenu = document.getElementById("dropdownMenu");
      dropdownMenu.classList.toggle("hidden");
  }

  window.onclick = function(event) {
      var dropdownButton = document.getElementById("dropdownButton");
      var dropdownMenu = document.getElementById("dropdownMenu");
      // Kontrollera om klicket är utanför både knappen och menyn
      if (!dropdownMenu.contains(event.target) && !dropdownButton.contains(event.target)) {
          dropdownMenu.classList.add("hidden");
      }
  }*/

templ ThingsDetailPage(l10n locale.Localizer, asset assets.AssetLoaderFunc) {
	<div class="flex flex-col items-start gap-14 flex-[1_0_0] py-8 w-full" id="things-view">
		//@ThingDetails()
	</div>
}

templ Things(l10n locale.Localizer, asset assets.AssetLoaderFunc) {
	<div class="flex flex-col items-start gap-14 flex-[1_0_0] py-8 w-full" id="things-view">
		<div class="flex flex-col items-start gap-6 self-stretch w-full px-8">
			<div class="flex items-center w-full justify-between">
				<h1 class="dark:text-white text-2xl font-bold font-heading leading-loose">{ l10n.Get("things") }</h1>
				<div class="flex items-center text-white dark:text-[#1F1F25] text-base font-bold font-sans leading-normal">
					<button class="w-auto h-10 pl-[18px] pr-4 py-2 bg-[#1C1C28F2] bg-opacity-95 dark:bg-[white] rounded-xl flex items-center gap-2 cursor-pointer">
						{ l10n.Get("addthing") }
					</button>
				</div>
			</div>
			@SumOfStuff(l10n, StatisticsViewModel{})
		</div>
		<div class="h-px border-t border-[#1C1C284D] w-full dark:border-[#FFFFFF4D]"></div>
		<div class="flex px-8 flex-col items-start self-stretch gap-10">
			<div class="w-full h-12 justify-between items-center inline-flex">
				<div class="inline-flex justify-start items-center gap-[34px] dark:text-white">
					@SearchField(l10n)
					<div class="flex items-center flex-[1_0_0] gap-6">
						<div class="relative ml-4">
							<button id="dropdownButtonType" type="button" class="flex items-center justify-start text-left p-2 gap-2 font-bold hover:bg-[#1c1c2829] hover:rounded-lg" onclick={ toggleDropdownType() }>
								{ l10n.Get("sensortype") }
								<svg class="w-[18px] h-[18px] dark:fill-white">
									@templ.Raw(iconSVG("chevron-down"))
								</svg>
							</button>
							<div id="dropdownMenuType" class="absolute z-10 hidden bg-[#FAFAFA] rounded-md shadow-lg mt-2.5">
								<ul class="p-3 space-y-2">
									<li>
										<label for="avlopp-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 text-gray-700 dark:text-gray-300 ">Avlopp</span>
											<div class="flex items-center">
												<input type="checkbox" id="avlopp-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="avlopp"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
									<li>
										<label for="livboj-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 text-gray-700 dark:text-gray-300">Livboj</span>
											<div class="flex items-center">
												<input type="checkbox" id="livboj-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="livboj"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
									<li>
										<label for="sandficka-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 text-gray-700 dark:text-gray-300">Sandficka</span>
											<div class="flex items-center">
												<input type="checkbox" id="sandficka-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="sandficka"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
									<li>
										<label for="soptunna-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 mr-4 text-gray-700 dark:text-gray-300">Soptunna</span>
											<div class="flex items-center">
												<input type="checkbox" id="soptunna-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="soptunna"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
								</ul>
							</div>
						</div>
						<div class="relative">
							<button id="dropdownButtonArea" type="button" class="flex items-center justify-start text-left p-2 gap-2 font-bold hover:bg-[#1c1c2829] hover:rounded-lg" onclick={ toggleDropdownArea() }>
								{ l10n.Get("measurementtype") }
								<svg class="w-[18px] h-[18px] dark:fill-white">
									@templ.Raw(iconSVG("chevron-down"))
								</svg>
							</button>
							<div id="dropdownMenuArea" class="absolute z-10 bg-[#FAFAFA] rounded-md shadow-lg hidden mt-2.5 ">
								<ul class="p-3 space-y-2">
									<li>
										<label for="bydalen-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 text-gray-700 dark:text-gray-300">Bydalen</span>
											<div class="flex items-center">
												<input type="checkbox" id="bydalen-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="bydalen"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
									<li>
										<label for="haga-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 text-gray-700 dark:text-gray-300">Haga</span>
											<div class="flex items-center">
												<input type="checkbox" id="haga-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="haga"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
									<li>
										<label for="centrum-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 text-gray-700 dark:text-gray-300">Centrum</span>
											<div class="flex items-center">
												<input type="checkbox" id="centrum-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="centrum"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
									<li>
										<label for="östermalm-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 text-gray-700 dark:text-gray-300">Östermalm</span>
											<div class="flex items-center">
												<input type="checkbox" id="östermalm-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="östermalm"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
									<li>
										<label for="skönsmon-checkbox" class="flex items-center justify-between w-full cursor-pointer">
											<span class="ml-2 mr-4 text-gray-700 dark:text-gray-300">Skönsmon</span>
											<div class="flex items-center">
												<input type="checkbox" id="skönsmon-checkbox" class="sr-only peer form-checkbox cursor-pointer" value="skönsmon"/>
												<div class="w-[20px] h-[20px] bg-white rounded border border-gray-400 peer-checked:bg-black peer-checked:border-black flex justify-center items-center">
													<svg class="w-full h-full fill-none stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity" viewBox="0 0 24 24">
														@templ.Raw(iconSVG("check"))
													</svg>
												</div>
											</div>
										</label>
									</li>
								</ul>
							</div>
						</div>
						<div class="relative">
							<button id="dropdownButtonFillinglevel" type="button" class="flex items-center justify-start text-left p-2 gap-2 font-bold hover:bg-[#1c1c2829] hover:rounded-lg" onclick={ toggleDropdownFillingLevel() }>
								{ l10n.Get("fillinglevel") }
								<svg class="w-[18px] h-[18px] dark:fill-white">
									@templ.Raw(iconSVG("chevron-down"))
								</svg>
							</button>
							<div id="dropdownMenuFillingLevel" class="absolute z-10 bg-[#FAFAFA] rounded-md shadow-lg hidden mt-2.5 dark:bg-gray-800 dark:text-white">
								<div class="rounded-md shadow-lg p-4">
									<div class="flex justify-between gap-4">
										<div class="flex flex-col gap-1">
											<label for="min-value" class="font-bold">Min</label>
											<input type="text" id="min-value" placeholder="0%" class="w-20 border border-[#1C1C2880] rounded-lg p-2 text-sm focus:border-black focus:ring-1 focus:ring-black focus:outline-none"/>
										</div>
										<div class="flex flex-col gap-1">
											<label for="max-value" class="font-bold">Max</label>
											<input type="text" id="max-value" placeholder="100%" class="w-20 border border-[#1C1C2880] rounded-lg p-2 text-sm focus:border-black focus:ring-1 focus:ring-black focus:outline-none"/>
										</div>
									</div>
									<div class="mt-4">
										<input type="range" id="range-slider" name="range-slider" min="0" max="100" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"/>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="h-14 flex justify-end items-center self-stretch">
					<div id="#list-map" class="w-[200px] h-[42px] p-1.5 bg-[#1C1C281F] bg-opacity-20 rounded-2xl gap-2 justify-end items-center inline-flex">
						@listMapSwitch("Lista", iconSVG("list"))
						@listMapSwitch("Karta", iconSVG("map"))
					</div>
				</div>
			</div>
			<div class="flex flex-col gap-4 w-full">
				<div class="w-full h-10 justify-items-start inline-flex text-[#1F1F25] dark:text-white gap-3">
					<div class="flex items-center justify-start text-left px-6 border-2 border-[#1C1C284D] border-opacity-30 dark:border-[#FFFFFF4D] rounded-xl">
						Soptunna
						<svg class="w-[24px] h-[24px] stroke-[#1F1F25] stroke-2 dark:stroke-white">
							@templ.Raw(iconSVG("close"))
						</svg>
					</div>
					<div class="flex items-center justify-start text-left px-6 border-2 border-[#1C1C284D] border-opacity-30 dark:border-[#FFFFFF4D] rounded-xl">
						Centrum
						<svg class="w-[24px] h-[24px] stroke-[#1F1F25] stroke-2 dark:stroke-white">
							@templ.Raw(iconSVG("close"))
						</svg>
					</div>
					<div class="flex items-center justify-start text-left px-6 border-2 border-[#1C1C284D] border-opacity-30 dark:border-[#FFFFFF4D] rounded-xl">
						Kvissleby
						<svg class="w-[24px] h-[24px] stroke-[#1F1F25] stroke-2 dark:stroke-white">
							@templ.Raw(iconSVG("close"))
						</svg>
					</div>
					<div class="flex items-center justify-start text-left px-6 border-2 border-[#1C1C284D] border-opacity-30 dark:border-[#FFFFFF4D] rounded-xl">
						0-70%
						<svg class="w-[24px] h-[24px] stroke-[#1F1F25] stroke-2 dark:stroke-white">
							@templ.Raw(iconSVG("close"))
						</svg>
					</div>
				</div>
			</div>
			<div class="w-full flex">
				<div class="flex-1 text-center pr-4">
					@Table(
						HeaderRow(TableHeaderText(l10n.Get("type")), TableHeaderText(l10n.Get("name")), TableHeaderText(l10n.Get("status"))),
						TableData(
							TableRow(
								TextCell("Soptunna"), TextCell("Fregattgatan 2"), ProgressBarCell("50"),
							),
							TableRow(
								TextCell("Livboj"), TextCell("air-sens-7"), LabelCell("På plats", true),
							),
							TableRow(
								TextCell("Termometer"), TextCell("06076898"), TextCell("27°"),
							),
							TableRow(
								TextCell("Soptunna"), TextCell("NIAB_lidar_50001c"), ProgressBarCell("10"),
							),
							TableRow(
								TextCell("Sandficka"), TextCell("EM500_UDL_1"), ProgressBarCell("75"),
							),
							TableRow(
								TextCell("Avlopp"), TextCell("NIAB_lidar_50001c"), ProgressBarCell("30"),
							),
							TableRow(
								TextCell("Livboj"), TextCell("NIAB_lidar_50001c"), LabelCell("Saknas", false),
							),
						),
						DataTableFooter("3", "things"),
					)
				</div>
				<div class="flex-1 text-center pr-4">
					@Map()
				</div>
			</div>
		</div>
	</div>
}
