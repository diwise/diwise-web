package components

import (
	"context"
	"fmt"
	"strings"

	"github.com/diwise/diwise-web/internal/pkg/presentation/locale"
	"github.com/diwise/diwise-web/internal/pkg/presentation/web/assets"
)

type ComponentName string

var CurrentComponent ComponentName = "current-component"

templ SectionDivider(title string) {
	<div class="self-stretch justify-start items-center gap-2 inline-flex">
		<div class="text-neutral-800 dark:text-neutral-300 text-lg font-bold font-heading leading-normal">{ title }</div>
		<div class="grow shrink basis-0 flex-col justify-start items-start gap-2 inline-flex">
			<div class="self-stretch h-px bg-gray-900 dark:bg-white bg-opacity-30"></div>
		</div>
	</div>
}

var icons = map[string]string{
	"alert-triangle":   "<path fill-rule=\"evenodd\" d=\"M8.733 1.995a2.5 2.5 0 0 1 3.433.926v.001l6.664 11.661v.002a2.5 2.5 0 0 1-2.162 3.748H3.337a2.5 2.5 0 0 1-2.185-3.748l.001-.002 6.664-11.66V2.92a2.5 2.5 0 0 1 .916-.926Zm1.259 1.327a.833.833 0 0 0-.725.422l-.002.003-6.668 11.67a.834.834 0 0 0 .729 1.25h13.34a.833.833 0 0 0 .72-1.25l-.001-.004-6.667-11.666-.001-.003a.833.833 0 0 0-.725-.422Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M10 6.667c.46 0 .833.373.833.833v3.333a.833.833 0 0 1-1.666 0V7.5c0-.46.373-.833.833-.833ZM9.167 14.167c0-.46.373-.834.833-.834h.008a.833.833 0 0 1 0 1.667H10a.833.833 0 0 1-.833-.833Z\" clip-rule=\"evenodd\"/>",
	"arrow-left":       "<g fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M11.09 3.577a.833.833 0 0 1 0 1.179L5.844 10l5.244 5.244a.833.833 0 0 1-1.178 1.179l-5.834-5.834a.833.833 0 0 1 0-1.178l5.834-5.834a.833.833 0 0 1 1.178 0Z\"/><path d=\"M3.833 10c0-.46.373-.833.834-.833h11.666a.833.833 0 0 1 0 1.666H4.667A.833.833 0 0 1 3.833 10Z\"/></g>",
	"arrow-right":      "<path fill-rule=\"evenodd\" d=\"M4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M11.293 4.293a1 1 0 0 1 1.414 0l7 7a1 1 0 0 1 0 1.414l-7 7a1 1 0 0 1-1.414-1.414L17.586 12l-6.293-6.293a1 1 0 0 1 0-1.414Z\" clip-rule=\"evenodd\"/>",
	"chartline":		"<path fill-rule=\"evenodd\" d=\"M3 3v16a2 2 0 0 0 2 2h16\" /><path d=\"m19 9-5 5-4-4-3 3\" />",
	"chevron-down":     "<path fill-rule=\"evenodd\" d=\"M3.97 6.22a.75.75 0 0 1 1.06 0L9 10.19l3.97-3.97a.75.75 0 1 1 1.06 1.06l-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\"/>",
	"check":            "<path fill-rule=\"evenodd\" d=\"M20 6 9 17l-5-5\" />",
	"circle":			"<circle fill-rule=\"evenodd\" cx=\"6\" cy=\"6\" r=\"6\" />",
	"circle-check":     "<path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" /><path d=\"m9 11 3 3L22 4\" />",
	"close":            "<path d=\"M18 6 6 18\" /><path d=\"m6 6 12 12\" />",
	"cog":              "<g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path d=\"M4.697 4.697a7.5 7.5 0 1 1 10.606 10.606A7.5 7.5 0 0 1 4.697 4.697ZM10 4.167a5.833 5.833 0 1 0 0 11.666 5.833 5.833 0 0 0 0-11.666Z\"/><path d=\"M8.232 8.232a2.5 2.5 0 1 1 3.536 3.536 2.5 2.5 0 0 1-3.536-3.536ZM10 9.167a.833.833 0 1 0 0 1.666.833.833 0 0 0 0-1.666ZM10 .833c.46 0 .833.373.833.834v1.666a.833.833 0 0 1-1.666 0V1.667c0-.46.373-.834.833-.834ZM10 15.833c.46 0 .833.373.833.834v1.666a.833.833 0 0 1-1.666 0v-1.666c0-.46.373-.834.833-.834ZM12.916 15.053a.833.833 0 0 1 1.139.305l.833 1.441a.833.833 0 0 1-1.443.835l-.833-1.442a.834.834 0 0 1 .304-1.139Z\"/><path d=\"M5.417 2.062a.833.833 0 0 1 1.138.305l3.333 5.775a.833.833 0 1 1-1.443.833L5.112 3.2a.833.833 0 0 1 .305-1.138ZM15.053 12.916a.834.834 0 0 1 1.139-.304l1.442.833a.833.833 0 1 1-.835 1.443l-1.441-.833a.833.833 0 0 1-.305-1.139ZM2.062 5.416A.833.833 0 0 1 3.2 5.112l1.442.833a.833.833 0 1 1-.834 1.443l-1.442-.833a.833.833 0 0 1-.304-1.139ZM10.833 10c0-.46.373-.833.834-.833h6.666a.833.833 0 0 1 0 1.666h-6.666a.833.833 0 0 1-.834-.833ZM.833 10c0-.46.373-.833.834-.833h1.666a.833.833 0 0 1 0 1.666H1.667A.833.833 0 0 1 .833 10ZM17.938 5.416a.833.833 0 0 1-.304 1.139l-1.442.833a.833.833 0 0 1-.834-1.443l1.441-.833a.833.833 0 0 1 1.14.304ZM4.946 12.916a.833.833 0 0 1-.304 1.139l-1.442.833a.833.833 0 0 1-.834-1.443l1.442-.833a.833.833 0 0 1 1.138.304ZM14.584 2.062c.398.23.534.74.304 1.138l-.833 1.442a.833.833 0 1 1-1.443-.834l.833-1.442a.833.833 0 0 1 1.139-.304ZM9.583 10.72c.399.23.535.74.305 1.138l-3.333 5.775a.833.833 0 1 1-1.443-.833l3.333-5.775a.833.833 0 0 1 1.138-.305Z\"/></g><defs><clipPath id=\"a\"><path d=\"M0 0h20v20H0z\"/></clipPath></defs>",
	"diwiselogo":		"<path fill-rule=\"evenodd\" d=\"M83.7963 2.90816C78.7449 3.43351 73.3905 5.21159 69.0867 7.81809C62.924 11.5157 57.8322 17.0924 54.8822 23.3965C53.5891 26.2051 52.9223 28.2054 52.0939 31.8222L51.9727 32.3879H53.286C54.4377 32.3879 54.5994 32.3475 54.5994 32.004C54.5994 30.6099 56.5997 25.2352 58.1555 22.4468C61.1863 17.052 66.0963 12.1623 71.4709 9.25268C74.9261 7.37357 79.3309 5.93898 82.9476 5.49446C83.9781 5.37323 85.1096 5.23179 85.4733 5.19138L86.1199 5.09035V3.89823C86.1199 2.86775 86.0593 2.6859 85.7764 2.70611C85.5743 2.72631 84.6853 2.80714 83.7963 2.90816Z\" fill=\"#C24E18\"/><path d=\"M84.3405 12.6068C75.935 13.6979 68.0953 19.0927 63.9936 26.6092C63.1449 28.165 62.074 30.7109 61.7912 31.8424L61.6699 32.3879H62.9429H64.236L64.7007 31.115C67.7316 22.7095 76.036 16.1023 84.886 15.0921L86.1185 14.9506V13.6777C86.1185 12.7684 86.0377 12.3845 85.8761 12.4047C85.7346 12.4249 85.0476 12.5058 84.3405 12.6068Z\" fill=\"#C24E18\"/><path d=\"M81.5729 21.8811C78.926 22.5681 77.2691 23.4975 75.2688 25.3766C73.6119 26.9325 71.9955 29.7006 71.4904 31.8222L71.3691 32.3879H72.5815C73.5715 32.3879 73.8342 32.3273 73.915 32.0242C73.9756 31.8424 74.3595 30.9938 74.7435 30.1653C76.5013 26.5081 80.6434 23.9016 84.7452 23.9016H86.1191V22.6893V21.477L84.5633 21.4972C83.6945 21.4972 82.3609 21.6588 81.5729 21.8811Z\" fill=\"#C24E18\"/><path d=\"M25.4425 29.4983C25.3617 29.5589 25.301 31.438 25.301 33.6808V37.7219L24.4524 36.853C23.3613 35.7417 22.4521 35.2972 20.8154 35.0143C16.4713 34.2465 12.3695 37.5602 12.0261 42.1267C11.7634 45.6222 13.5011 48.6934 16.5925 50.1482C17.5624 50.5928 17.9867 50.6736 19.6435 50.6736C21.3408 50.6736 21.7045 50.613 22.7147 50.1078C23.3613 49.7845 24.1897 49.1582 24.5939 48.7137L25.301 47.865V49.1178V50.3705H26.6144H27.9278V39.8637V29.3568H26.7558C26.1093 29.3568 25.5031 29.4174 25.4425 29.4983ZM22.3713 38.0048C24.0685 38.8736 25.099 40.4496 25.2606 42.4095C25.5233 45.703 23.2805 48.1479 20.0072 48.1479C17.7846 48.1479 16.2894 47.2993 15.2791 45.4808C14.774 44.5513 14.6932 44.2078 14.6932 42.7935C14.6932 41.0154 14.9761 40.2678 16.0874 39.0959C16.7137 38.4089 17.5017 37.9239 18.4312 37.6209C19.3 37.338 21.5024 37.54 22.3713 38.0048Z\" /><path d=\"M40.1523 29.5184C38.8591 29.781 38.3742 31.5389 39.344 32.4886C40.7382 33.903 43.1225 31.8622 41.9708 30.2256C41.6273 29.7406 40.7382 29.3971 40.1523 29.5184Z\" /><path d=\"M84.5849 29.5181C83.8777 29.6191 83.2109 30.4879 83.2109 31.3164C83.2109 32.2054 84.0192 32.9934 84.9284 32.9934C85.6558 32.9934 86.7267 32.0438 86.7267 31.377C86.7267 30.2455 85.676 29.3362 84.5849 29.5181Z\" /><path d=\"M101.132 35.0146C98.3032 35.6005 96.6463 37.9242 97.2727 40.4094C97.6768 42.0259 98.6265 42.7331 101.677 43.7029C104.769 44.6728 105.517 45.1779 105.517 46.3296C105.517 48.6735 101.031 49.0372 99.3539 46.8348L98.7477 46.0266L97.9395 46.4913C97.495 46.7337 97.01 47.0166 96.8484 47.1176C96.2018 47.5218 97.9193 49.4413 99.6367 50.2495C101.031 50.8759 104.223 50.8557 105.557 50.1889C106.769 49.6029 107.881 48.3906 108.062 47.4409C108.305 46.1074 108.062 44.6122 107.456 43.8242C106.789 42.9351 106.001 42.5108 103.375 41.7228C100.708 40.8944 99.9802 40.4094 99.8994 39.379C99.8186 38.3889 100.384 37.7423 101.597 37.4796C103.152 37.1361 104.729 37.6615 105.436 38.7526L105.759 39.2577L106.709 38.7122C107.214 38.4293 107.719 38.1262 107.8 38.0454C108.103 37.7827 106.163 35.8834 105.173 35.4591C104.001 34.9742 102.284 34.7721 101.132 35.0146Z\" /><path d=\"M124.086 35.0143C121.823 35.3982 119.62 37.0753 118.529 39.1969C117.984 40.3082 117.943 40.5102 117.943 42.7935C117.943 45.0363 117.984 45.2989 118.509 46.3698C119.297 47.9661 120.61 49.2592 122.247 50.027C123.52 50.6332 123.742 50.6736 125.823 50.6736C127.824 50.6736 128.167 50.613 129.279 50.1078C130.572 49.5017 132.532 47.7438 132.309 47.3801C132.249 47.2589 131.764 46.9356 131.259 46.6527L130.35 46.1476L129.582 46.9154C128.592 47.9054 127.622 48.2489 125.823 48.2287C123.136 48.2085 121.318 46.9558 120.59 44.5715L120.449 44.1068L126.773 44.0664L133.097 44.0058L133.158 43.0157C133.401 39.2373 130.693 35.7013 127.056 35.0346C125.722 34.7921 125.44 34.7921 124.086 35.0143ZM127.864 37.9239C129.056 38.4695 129.885 39.4393 130.269 40.7729L130.552 41.6821H125.48H120.429L120.57 41.1164C120.772 40.2476 121.621 38.914 122.267 38.4493C123.904 37.2976 126.086 37.0955 127.864 37.9239Z\" /><path d=\"M39.2422 42.7938V50.3708H40.5555H41.8689V42.7938V35.2167H40.5555H39.2422V42.7938Z\" /><path d=\"M51.9727 35.5194C51.9727 35.681 52.7809 38.5704 53.7709 41.9447C54.761 45.2988 55.7309 48.5721 55.9127 49.2187L56.2562 50.3906L57.6908 50.33L59.1254 50.2694L60.8429 44.7735C61.7925 41.7629 62.6209 39.3382 62.6816 39.3786C62.7422 39.4393 63.5504 41.9043 64.5 44.8745L66.2377 50.2694H67.6117H68.9857L71.0668 43.1975C72.1983 39.2978 73.1884 35.9235 73.2692 35.6608C73.4309 35.1961 73.3904 35.1961 72.1579 35.2567L70.885 35.3173L69.3494 40.6718C68.5007 43.6218 67.7531 46.1677 67.6925 46.3293C67.6319 46.491 67.2076 45.3999 66.7429 43.9047C66.2579 42.4095 65.4699 39.8434 64.9446 38.1865L64.0353 35.2163H62.7624H61.4894L60.661 37.8834C60.1963 39.3584 59.4083 41.9043 58.8829 43.5612C58.3778 45.1978 57.8929 46.4304 57.812 46.2889C57.7312 46.1475 57.024 43.743 56.236 40.9749C55.4278 38.1865 54.7408 35.7619 54.6802 35.5598C54.5994 35.2769 54.3367 35.2163 53.2658 35.2163C52.2555 35.2163 51.9727 35.2769 51.9727 35.5194Z\" /><path d=\"M83.6953 42.7938V50.3708H85.0087H86.322L86.2816 42.8342L86.221 35.3178L84.9683 35.2572L83.6953 35.1965V42.7938Z\" />",
	"filter":           "<path fill-rule=\"evenodd\" d=\"M1.5 4.5a.75.75 0 0 1 .75-.75h13.5a.75.75 0 0 1 0 1.5H2.25a.75.75 0 0 1-.75-.75ZM4.5 9a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 4.5 9ZM6.75 13.5a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75Z\" clip-rule=\"evenodd\"/>",
	"graph":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.5 2C4.05228 2 4.5 2.44772 4.5 3V20H21.5C22.0523 20 22.5 20.4477 22.5 21C22.5 21.5523 22.0523 22 21.5 22H3.5C2.94772 22 2.5 21.5523 2.5 21V3C2.5 2.44772 2.94772 2 3.5 2Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.7929 8.29289C19.1834 7.90237 19.8166 7.90237 20.2071 8.29289C20.5976 8.68342 20.5976 9.31658 20.2071 9.70711L15.2071 14.7071C14.8166 15.0976 14.1834 15.0976 13.7929 14.7071L10.5 11.4142L8.20711 13.7071C7.81658 14.0976 7.18342 14.0976 6.79289 13.7071C6.40237 13.3166 6.40237 12.6834 6.79289 12.2929L9.79289 9.29289C10.1834 8.90237 10.8166 8.90237 11.2071 9.29289L14.5 12.5858L18.7929 8.29289Z\"/>",
	"home":             "<path fill-rule=\"evenodd\" d=\"M9.488 1.009a.833.833 0 0 1 1.024 0l7.5 5.833c.203.158.321.4.321.658v9.167a2.5 2.5 0 0 1-2.5 2.5H4.167a2.5 2.5 0 0 1-2.5-2.5V7.5c0-.257.118-.5.321-.658l7.5-5.833ZM3.333 7.907v8.76a.833.833 0 0 0 .834.833h11.666a.833.833 0 0 0 .834-.833v-8.76L10 2.722 3.333 7.907Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.667 10c0-.46.373-.833.833-.833h5c.46 0 .833.373.833.833v8.333a.833.833 0 0 1-1.666 0v-7.5H8.333v7.5a.833.833 0 0 1-1.666 0V10Z\" clip-rule=\"evenodd\"/>",
	"hotel":            "<path d=\"M10 22v-6.57\" /><path d=\"M12 11h.01\" /><path d=\"M12 7h.01\" /><path d=\"M14 15.43V22\" /><path d=\"M15 16a5 5 0 0 0-6 \" /><path d=\"M16 11h.01\" /><path d=\"M16 7h.01\" /><path d=\"M8 11h.01\" /><path d=\"M8 7h.01\" /><rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\"/>",
	"info":             "<circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"M12 16v-4\" /><path d=\"M12 8h.01\" />",
	"list":             "<path fill-rule=\"evenodd\" d=\"M5.75 4.5a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5a.75.75 0 0 1-.75-.75ZM5.75 9a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5A.75.75 0 0 1 5.75 9ZM5.75 13.5a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5a.75.75 0 0 1-.75-.75ZM2 4.5a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 4.5ZM2 9a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 9ZM2 13.5a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 13.5Z\" clip-rule=\"evenodd\"/>",
	"log-out":          "<path fill-rule=\"evenodd\" d=\"M4.167 3.333a.833.833 0 0 0-.834.834v11.666a.833.833 0 0 0 .834.834H7.5a.833.833 0 0 1 0 1.666H4.167a2.5 2.5 0 0 1-2.5-2.5V4.167a2.5 2.5 0 0 1 2.5-2.5H7.5a.833.833 0 1 1 0 1.666H4.167ZM12.744 5.244a.833.833 0 0 1 1.179 0l4.166 4.167a.833.833 0 0 1 0 1.178l-4.166 4.167a.833.833 0 0 1-1.179-1.178L16.322 10l-3.578-3.577a.833.833 0 0 1 0-1.179Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.667 10c0-.46.373-.833.833-.833h10a.833.833 0 0 1 0 1.666h-10A.833.833 0 0 1 6.667 10Z\" clip-rule=\"evenodd\"/>",
	"map":              "<path fill-rule=\"evenodd\" d=\"M16.144 1.612a.75.75 0 0 1 .356.638V13.5a.75.75 0 0 1-.415.67l-4.5 2.25a.75.75 0 0 1-.67 0L6.75 14.339l-4.165 2.083A.75.75 0 0 1 1.5 15.75V4.5a.75.75 0 0 1 .415-.67l4.5-2.25a.75.75 0 0 1 .67 0L11.25 3.66l4.165-2.082a.75.75 0 0 1 .73.033ZM3 4.964v9.572l3.415-1.707a.75.75 0 0 1 .67 0l4.165 2.082L15 13.037V3.463L11.585 5.17a.75.75 0 0 1-.67 0L6.75 3.089 3 4.964Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.75 1.5a.75.75 0 0 1 .75.75V13.5a.75.75 0 0 1-1.5 0V2.25a.75.75 0 0 1 .75-.75ZM11.25 3.75a.75.75 0 0 1 .75.75v11.25a.75.75 0 0 1-1.5 0V4.5a.75.75 0 0 1 .75-.75Z\" clip-rule=\"evenodd\"/>",
	"map-pin":          "<path d=\"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\" /><circle cx=\"12\" cy=\"10\" r=\"3\" />",
	"moon":             "<path fill-rule=\"evenodd\" d=\"M8.228 3.573a6.667 6.667 0 1 0 8.199 8.2 6.136 6.136 0 0 1-8.199-8.2ZM5.37 3.071A8.333 8.333 0 0 1 10 1.667a.833.833 0 0 1 .59 1.422 4.47 4.47 0 0 0 6.32 6.322.833.833 0 0 1 1.423.59A8.333 8.333 0 1 1 5.37 3.07Z\" clip-rule=\"evenodd\"/>",
	"pen":              "<path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\"/>",
	"pencil":           "<path fill=\"none\" d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\" /><path fill=\"none\" d=\"m15 5 4 4\" />",
	"plus":             "<path d=\"M5 12h14\"/><path d=\"M12 5v14\"/>",
	"rss":              "<path fill-rule=\"evenodd\" d=\"M2.5 9.167c0-.46.373-.834.833-.834a8.333 8.333 0 0 1 8.334 8.334.833.833 0 0 1-1.667 0A6.667 6.667 0 0 0 3.333 10a.833.833 0 0 1-.833-.833Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M2.5 3.333c0-.46.373-.833.833-.833A14.167 14.167 0 0 1 17.5 16.667a.833.833 0 0 1-1.667 0 12.5 12.5 0 0 0-12.5-12.5.833.833 0 0 1-.833-.834ZM2.5 15.833a1.667 1.667 0 1 1 3.333 0 1.667 1.667 0 0 1-3.333 0Z\" clip-rule=\"evenodd\"/>",
	"search":           "<path fill-rule=\"evenodd\" d=\"M10.083 3.667a6.417 6.417 0 1 0 0 12.833 6.417 6.417 0 0 0 0-12.833Zm-8.25 6.416a8.25 8.25 0 1 1 16.5 0 8.25 8.25 0 0 1-16.5 0Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M14.66 14.66a.917.917 0 0 1 1.296 0l3.942 3.942a.917.917 0 1 1-1.296 1.296l-3.942-3.941a.917.917 0 0 1 0-1.297Z\" clip-rule=\"evenodd\"/>",
	"send-to-back":     "<g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path d=\"M13.333 12.5a.833.833 0 0 0-.833.833v3.334c0 .46.373.833.833.833h3.334c.46 0 .833-.373.833-.833v-3.334a.833.833 0 0 0-.833-.833h-3.334Zm-2.5.833a2.5 2.5 0 0 1 2.5-2.5h3.334a2.5 2.5 0 0 1 2.5 2.5v3.334a2.5 2.5 0 0 1-2.5 2.5h-3.334a2.5 2.5 0 0 1-2.5-2.5v-3.334ZM3.333 2.5a.833.833 0 0 0-.833.833v3.334c0 .46.373.833.833.833h3.334c.46 0 .833-.373.833-.833V3.333a.833.833 0 0 0-.833-.833H3.333Zm-2.5.833a2.5 2.5 0 0 1 2.5-2.5h3.334a2.5 2.5 0 0 1 2.5 2.5v3.334a2.5 2.5 0 0 1-2.5 2.5H3.333a2.5 2.5 0 0 1-2.5-2.5V3.333ZM5.833 10.833c.46 0 .834.373.834.834v.833a.833.833 0 0 0 .833.833h.833a.833.833 0 1 1 0 1.667H7.5A2.5 2.5 0 0 1 5 12.5v-.833c0-.46.373-.834.833-.834ZM10.833 5.833c0-.46.373-.833.834-.833h.833A2.5 2.5 0 0 1 15 7.5v.833a.833.833 0 1 1-1.667 0V7.5a.833.833 0 0 0-.833-.833h-.833a.833.833 0 0 1-.834-.834Z\"/></g><defs><clipPath id=\"a\"><path d=\"M0 0h20v20H0z\"/></clipPath></defs>",
	"settings-outline": "<path d=\"M17.43 10.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46a.5.5 0 0 0-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98L12.49.42A.488.488 0 0 0 12 0H8c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1a.566.566 0 0 0-.18-.03c-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98L.46 12.63c-.19.15-.24.42-.12.64l2 3.46a.5.5 0 0 0 .61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65Zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35H9.3l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74 0-.2.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13L9.3 2h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13ZM10 6c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4Zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2Z\"/>",
	"shapes":           "<path d=\"M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z\"/><rect width=\"7\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\"/><circle cx=\"17.5\" cy=\"17.5\" r=\"3.5\"/>",
	"sun-medium":       "<path fill-rule=\"evenodd\" d=\"M12 9a3 3 0 1 0 0 6 3 3 0 0 0 0-6Zm-5 3a5 5 0 1 1 10 0 5 5 0 0 1-10 0ZM12 2a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1ZM12 19a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0v-1a1 1 0 0 1 1-1ZM2 12a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1ZM19 12a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2h-1a1 1 0 0 1-1-1ZM19.071 4.929a1 1 0 0 1 0 1.414l-.707.707a1 1 0 1 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM7.05 16.95a1 1 0 0 1 0 1.414l-.707.707a1 1 0 0 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM4.929 4.929a1 1 0 0 1 1.414 0l.707.707A1 1 0 0 1 5.636 7.05l-.707-.707a1 1 0 0 1 0-1.414ZM16.95 16.95a1 1 0 0 1 1.414 0l.707.707a1 1 0 0 1-1.414 1.414l-.707-.707a1 1 0 0 1 0-1.414Z\" clip-rule=\"evenodd\"/>",
	"table":			"<path fill-rule=\"evenodd\" d=\"M12 3v18\" /><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" /><path d=\"M3 9h18\" /><path d=\"M3 15h18\" />",
	"tip":				"<g fill-rule=\"evenodd\" id=\"Tip\" clip-path=\"url(#clip0_1424_3946)\"><rect id=\"Rectangle 1\" x=\"6.5\" y=\"16\" width=\"20\" height=\"20\" transform=\"rotate(-45 6.5 16)\"></g><defs><clipPath id=\"clip0_1424_3946\"><rect width=\"40\" height=\"8\" transform=\"translate(0.5)\"/></clipPath></defs>",
	"trashcan":         "<path d=\"M3 6h18\" /><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\" /><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\" />",
}

func iconSVG(name string) string {
	svg, ok := icons[name]
	if !ok {
		fmt.Println("svg icon", name, "not found!")
		return icons["rss"]
	}
	return svg
}

type svgCfg struct {
	classes map[string][]string
	stroke  templ.Attributes
	viewBox string
}

func (cfg *svgCfg) Classes() string {
	classNames := make([]string, 0, 6)

	for _, v := range cfg.classes {
		classNames = append(classNames, v...)
	}

	return strings.Join(classNames, " ")
}

func (cfg *svgCfg) Stroke() templ.Attributes {
	return cfg.stroke
}

func (cfg *svgCfg) ViewBox() string {
	return cfg.viewBox
}

func newSVGCfg(fn ...func(*svgCfg)) *svgCfg {
	cfg := &svgCfg{
		classes: map[string][]string{
			"fill": {"fill-primary-dark", "dark:fill-zinc-100"},
			"size": {"w-5", "h-5"},
		},
		viewBox: "0 0 20 20",
	}

	for _, f := range fn {
		f(cfg)
	}

	return cfg
}

func AlertStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-red-700", "dark:fill-err-prim-surf"}
	}
}

func DisabledStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-black", "opacity-20", "dark:fill-white", "dark:opacity-60"}
	}
}

func WarningStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-orange-400", "dark:fill-amber-500"}
	}
}

func OKStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-green-700", "dark:fill-green-500"}
	}
}

func NoFill() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-none", "dark:fill-none"}
	}
}

func FillColor(color, darkColor string) func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{fmt.Sprintf("fill-%s", color), fmt.Sprintf("dark:fill-%s", darkColor)}
	}
}

func StrokeColor(color, darkStrokeColor string) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.classes["stroke"] = []string{fmt.Sprintf("stroke-%s", color), fmt.Sprintf("dark:stroke-%s", darkStrokeColor)}
	}
}

func HoverStroke() func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.classes["group-hover:stroke"] = []string{"group-hover:stroke-primary-dark"}
	}
}

func SelectedIcon(isSelected bool) func(*svgCfg) {
	return func(cfg *svgCfg) {
		if isSelected {
			(*cfg).classes["fill"] = []string{"fill-white"}
			(*cfg).classes["dark:fill"] = []string{"dark:fill-black"}
		}
	}
}

func SelectedIconNoFill(isSelected bool) func(*svgCfg) {
	return func(cfg *svgCfg) {
		if isSelected {
			(*cfg).classes["stroke"] = []string{"stroke-white", "dark:stroke-primary-dark"}
		}
	}
}

func Stroke(attrs templ.Attributes) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.stroke = attrs
	}
}

func Size(x int) func(*svgCfg) {
	mapSize := func(prefix string, size int) string {
		if size <= 100 {
			return prefix + fmt.Sprintf("%d", x/4)
		}

		return prefix + fmt.Sprintf("[%dpx]", x)
	}

	return func(cfg *svgCfg) {
		(*cfg).classes["size"] = []string{
			mapSize("h-", x),
			mapSize("w-", x),
		}
	}
}

func Box(x, y int) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.viewBox = fmt.Sprintf("0 0 %d %d", x, y)
	}
}

templ SVG(name string, config ...func(*svgCfg)) {
	<svg class={ newSVGCfg(config...).Classes() } viewBox={ newSVGCfg(config...).ViewBox() } { newSVGCfg(config...).Stroke()... }>
		@templ.Raw(iconSVG(name))
	</svg>
}

templ MenuSegment(title, slug string, icon templ.Component, asset assets.AssetLoaderFunc, selected bool) {
	<div
		class={ "flex px-3 py-2.5 justify-start items-center gap-2.5 self-stretch cursor-pointer",
        templ.KV("rounded-xl", !selected),
		templ.KV("hover:bg-tertiary-surface-hover", !selected),
		templ.KV("dark:hover:bg-white-30", !selected),
        templ.KV("rounded-lg", selected), 
		templ.KV("bg-black", selected),
		templ.KV("dark:bg-primary-surface-dark", selected)}
		hx-get={ slug }
		hx-target="#body"
		hx-replace-url="true"
	>
		@icon
		<div
			class={ "text-base font-sans leading-normal",
            templ.KV("text-neutral-800", !selected),
			templ.KV("font-bold", selected),
            templ.KV("text-white", selected),
			templ.KV("dark:text-primary-dark", selected),
			templ.KV("dark:text-secondary", !selected)  }
		>
			{ title }
		</div>
	</div>
}

templ Switch(isOn bool, onclick templ.ComponentScript) {
	<div class="flex h-8 w-14 min-w-14 p-1.5 items-end dark:flex-col-reverse gap-1 rounded-[56px] bg-gray-900 bg-opacity-20 dark:bg-white dark:bg-opacity-30" onclick={ onclick }>
		<div class="flex h-5 w-5 p-[3.33px] bg-gray-900 bg-opacity-60 dark:bg-white dark:bg-opacity-90 rounded-full justify-center items-center">
			<div class="w-[13.33px] h-[13.33px] px-[1.67px] pt-[2.78px] pb-[3.33px] justify-center items-center inline-flex">
				<svg class="h-[14px] min-w-[14px] fill-zinc-50 dark:fill-neutral-800">
					<path fill-rule="evenodd" d="M11.837 3.274a.556.556 0 0 1 0 .786l-6.11 6.11a.555.555 0 0 1-.787 0L2.163 7.394a.556.556 0 1 1 .785-.786l2.385 2.385 5.719-5.718a.556.556 0 0 1 .785 0Z" clip-rule="evenodd"></path>
				</svg>
			</div>
		</div>
	</div>
}

script onPageLoad() {
    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.body.classList.add('dark')
    }	
}

script toggleDarkMode() {
    if (localStorage.theme === 'light') {
        document.body.classList.add('dark');
        localStorage.theme = 'dark';
    } else {
        document.body.classList.remove('dark');
        localStorage.theme = 'light';
    }

    const isDarkMode = document.body.classList.contains('dark');

    if (typeof updateChartForTheme === 'function' && window.myChart) {
        updateChartForTheme(isDarkMode);
    }

    if (typeof updateMapForTheme === 'function') {
        updateMapForTheme(isDarkMode);  
    }
}

templ DarkModeToggle(isOn bool, asset assets.AssetLoaderFunc) {
	<div class="px-3.5 justify-start items-center gap-3 inline-flex">
		@SVG("sun-medium", Size(24), Box(24, 24))
		@Switch(isOn, toggleDarkMode())
		@SVG("moon", Size(20), Box(20, 20))
	</div>
}

templ Badge(count string) {
	<div class="w-5 h-5 bg-gray-900 dark:bg-white bg-opacity-95 rounded-lg justify-center items-center flex">
		<div class="w-6 h-6 text-center text-white dark:text-neutral-800 text-sm font-bold font-sans leading-6">
			{ count }
		</div>
	</div>
}

templ OverviewCard(title, url string, count int, icon templ.Component, asset assets.AssetLoaderFunc) {
	<div class="flex items-center flex-1 bg-white dark:bg-gray-800 rounded-2xl shadow gap-2 hover:cursor-pointer"
			hx-get={ url }
			hx-target="#body"
			hx-replace-url="true" >
		<div class="flex flex-1 p-6 items-end justify-between">
			<div class="flex flex-col justify-center items-start gap-4">
				@icon
				<div class="text-neutral-800 dark:text-neutral-200 text-[32px] font-bold font-heading leading-10">
					if count > 0 {
						{ fmt.Sprintf("%d", count) }
					} else {
						{ "-" }
					}
				</div>
				<div class="text-zinc-700 dark:text-zinc-200 text-lg whitespace-nowrap">
					{ title }
				</div>
			</div>
			<div class="w-6 h-6 flex ml-auto items-center justify-center bg-primary-surface dark:bg-white rounded-full">
				@SVG("arrow-right", Size(16), Box(24, 24), StrokeColor("white", "black"), FillColor("white", "black"))
			</div>
		</div>
	</div>
}

func reloaderEndpoint(version string) string {
	return fmt.Sprintf("/version/%s", version)
}

func reloaderFrequency(version string) string {
	if strings.HasPrefix(version, "develop-") {
		return "every 1s"
	}

	return "every 60s"
}

func isCurrent(ctx context.Context, expect string) bool {
	name := fmt.Sprintf("%s", ctx.Value(CurrentComponent))
	return name == expect
}

templ Body(version string, l10n locale.Localizer, asset assets.AssetLoaderFunc, mainContent templ.Component) {
	<body id="body" onload={ onPageLoad() }>
		<div id="reloader" hx-get={ reloaderEndpoint(version) } hx-trigger={ reloaderFrequency(version) }></div>
		<div class="flex w-full items-start bg-white dark:bg-content-background">
			<div class="flex flex-col px-3 py-8 justify-between items-start shrink-0 self-stretch h-screen w-64 sticky top-0 border-r border-gray-30 dark:border-white dark:border-opacity-30">
				<div class="flex flex-col items-start self-stretch gap-14">
					@SVG("diwiselogo", Box(135, 51), Size(51), FillColor("primary-dark", "white"))
					<div class="flex flex-col items-start self-stretch gap-6">
						//@SectionDivider(l10n.Get("overview"))
						@MenuSegment(l10n.Get("home"), "/home", SVG("home", SelectedIcon(isCurrent(ctx, "home"))), asset, isCurrent(ctx, "home"))
						@MenuSegment(l10n.Get("sensors"), "/sensors", SVG("rss", SelectedIcon(isCurrent(ctx, "sensors"))), asset, isCurrent(ctx, "sensors"))
						@MenuSegment(l10n.Get("things"), "/things", SVG("shapes", NoFill(), Box(24, 24), StrokeColor("primary-dark", "zinc-100"), SelectedIconNoFill(isCurrent(ctx, "things"))), asset, isCurrent(ctx, "things"))
						/*
						@MenuSegment(l10n.Get("functions"), "/functions", "send-to-back", asset, isCurrent(ctx, "functions"))
						<div class="self-stretch px-3.5 py-2.5 rounded-xl justify-between items-center inline-flex">
							<div class="justify-start items-center gap-2 flex">
								@SVG("alert-triangle")
								<div class="text-neutral-800 dark:text-neutral-300 text-base font-bold font-sans leading-normal">Larm</div>
							</div>
							@Badge("5")
						</div>
						@MenuSegment("Integrationer", "/integrations", "cog", asset, isCurrent(ctx, "integrations"))
						*/
					</div>
				</div>
				<div class="flex flex-col flex-1 items-start justify-end self-stretch gap-10">
					//@SectionDivider("Konto")
					//@MenuSegment("Inställningar", "/settings", SVG("settings-outline"), asset, isCurrent(ctx, "settings"))
					<div class="font-bold">
						@MenuSegment(l10n.Get("logout"), "/logout", SVG("log-out"), asset, false)
					</div>
					@DarkModeToggle(false, asset)
				</div>
			</div>
			<div class="flex flex-col flex-1 items-start py-8 px-10 gap-20" id="main-content">
				@mainContent
			</div>
		</div>
	</body>
}
