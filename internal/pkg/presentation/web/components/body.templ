package components

import (
	"fmt"
	"strings"

	"github.com/diwise/diwise-web/internal/pkg/presentation/locale"
	"github.com/diwise/diwise-web/internal/pkg/presentation/web/assets"
)

type ComponentName string

var CurrentComponent ComponentName = "current-component"


templ SectionDivider(titel string) {
	<div class="self-stretch justify-start items-center gap-2 inline-flex">
		<div class="text-neutral-800 dark:text-neutral-300 text-lg font-bold font-heading leading-normal">{ titel }</div>
		<div class="grow shrink basis-0 flex-col justify-start items-start gap-2 inline-flex">
			<div class="self-stretch h-px bg-gray-900 dark:bg-white bg-opacity-30"></div>
		</div>
	</div>
}

var icons = map[string]string{
	"alert-triangle":   "<path fill-rule=\"evenodd\" d=\"M8.733 1.995a2.5 2.5 0 0 1 3.433.926v.001l6.664 11.661v.002a2.5 2.5 0 0 1-2.162 3.748H3.337a2.5 2.5 0 0 1-2.185-3.748l.001-.002 6.664-11.66V2.92a2.5 2.5 0 0 1 .916-.926Zm1.259 1.327a.833.833 0 0 0-.725.422l-.002.003-6.668 11.67a.834.834 0 0 0 .729 1.25h13.34a.833.833 0 0 0 .72-1.25l-.001-.004-6.667-11.666-.001-.003a.833.833 0 0 0-.725-.422Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M10 6.667c.46 0 .833.373.833.833v3.333a.833.833 0 0 1-1.666 0V7.5c0-.46.373-.833.833-.833ZM9.167 14.167c0-.46.373-.834.833-.834h.008a.833.833 0 0 1 0 1.667H10a.833.833 0 0 1-.833-.833Z\" clip-rule=\"evenodd\"/>",
	"arrow-left":       "<g fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M11.09 3.577a.833.833 0 0 1 0 1.179L5.844 10l5.244 5.244a.833.833 0 0 1-1.178 1.179l-5.834-5.834a.833.833 0 0 1 0-1.178l5.834-5.834a.833.833 0 0 1 1.178 0Z\"/><path d=\"M3.833 10c0-.46.373-.833.834-.833h11.666a.833.833 0 0 1 0 1.666H4.667A.833.833 0 0 1 3.833 10Z\"/></g>",
	"arrow-right":      "<path fill-rule=\"evenodd\" d=\"M4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M11.293 4.293a1 1 0 0 1 1.414 0l7 7a1 1 0 0 1 0 1.414l-7 7a1 1 0 0 1-1.414-1.414L17.586 12l-6.293-6.293a1 1 0 0 1 0-1.414Z\" clip-rule=\"evenodd\"/>",
	"chevron-down":     "<path fill-rule=\"evenodd\" d=\"M3.97 6.22a.75.75 0 0 1 1.06 0L9 10.19l3.97-3.97a.75.75 0 1 1 1.06 1.06l-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\"/>",
	"check":			"<path fill-rule=\"evenodd\" d=\"M20 6 9 17l-5-5\" />",
	"circle-check":		"<path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" /><path d=\"m9 11 3 3L22 4\" />",
	"close":			"<path d=\"M18 6 6 18\" /><path d=\"m6 6 12 12\" />",
	"cog":              "<g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path d=\"M4.697 4.697a7.5 7.5 0 1 1 10.606 10.606A7.5 7.5 0 0 1 4.697 4.697ZM10 4.167a5.833 5.833 0 1 0 0 11.666 5.833 5.833 0 0 0 0-11.666Z\"/><path d=\"M8.232 8.232a2.5 2.5 0 1 1 3.536 3.536 2.5 2.5 0 0 1-3.536-3.536ZM10 9.167a.833.833 0 1 0 0 1.666.833.833 0 0 0 0-1.666ZM10 .833c.46 0 .833.373.833.834v1.666a.833.833 0 0 1-1.666 0V1.667c0-.46.373-.834.833-.834ZM10 15.833c.46 0 .833.373.833.834v1.666a.833.833 0 0 1-1.666 0v-1.666c0-.46.373-.834.833-.834ZM12.916 15.053a.833.833 0 0 1 1.139.305l.833 1.441a.833.833 0 0 1-1.443.835l-.833-1.442a.834.834 0 0 1 .304-1.139Z\"/><path d=\"M5.417 2.062a.833.833 0 0 1 1.138.305l3.333 5.775a.833.833 0 1 1-1.443.833L5.112 3.2a.833.833 0 0 1 .305-1.138ZM15.053 12.916a.834.834 0 0 1 1.139-.304l1.442.833a.833.833 0 1 1-.835 1.443l-1.441-.833a.833.833 0 0 1-.305-1.139ZM2.062 5.416A.833.833 0 0 1 3.2 5.112l1.442.833a.833.833 0 1 1-.834 1.443l-1.442-.833a.833.833 0 0 1-.304-1.139ZM10.833 10c0-.46.373-.833.834-.833h6.666a.833.833 0 0 1 0 1.666h-6.666a.833.833 0 0 1-.834-.833ZM.833 10c0-.46.373-.833.834-.833h1.666a.833.833 0 0 1 0 1.666H1.667A.833.833 0 0 1 .833 10ZM17.938 5.416a.833.833 0 0 1-.304 1.139l-1.442.833a.833.833 0 0 1-.834-1.443l1.441-.833a.833.833 0 0 1 1.14.304ZM4.946 12.916a.833.833 0 0 1-.304 1.139l-1.442.833a.833.833 0 0 1-.834-1.443l1.442-.833a.833.833 0 0 1 1.138.304ZM14.584 2.062c.398.23.534.74.304 1.138l-.833 1.442a.833.833 0 1 1-1.443-.834l.833-1.442a.833.833 0 0 1 1.139-.304ZM9.583 10.72c.399.23.535.74.305 1.138l-3.333 5.775a.833.833 0 1 1-1.443-.833l3.333-5.775a.833.833 0 0 1 1.138-.305Z\"/></g><defs><clipPath id=\"a\"><path d=\"M0 0h20v20H0z\"/></clipPath></defs>",
	"filter":           "<path fill-rule=\"evenodd\" d=\"M1.5 4.5a.75.75 0 0 1 .75-.75h13.5a.75.75 0 0 1 0 1.5H2.25a.75.75 0 0 1-.75-.75ZM4.5 9a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 4.5 9ZM6.75 13.5a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75Z\" clip-rule=\"evenodd\"/>",
	"home":             "<path fill-rule=\"evenodd\" d=\"M9.488 1.009a.833.833 0 0 1 1.024 0l7.5 5.833c.203.158.321.4.321.658v9.167a2.5 2.5 0 0 1-2.5 2.5H4.167a2.5 2.5 0 0 1-2.5-2.5V7.5c0-.257.118-.5.321-.658l7.5-5.833ZM3.333 7.907v8.76a.833.833 0 0 0 .834.833h11.666a.833.833 0 0 0 .834-.833v-8.76L10 2.722 3.333 7.907Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.667 10c0-.46.373-.833.833-.833h5c.46 0 .833.373.833.833v8.333a.833.833 0 0 1-1.666 0v-7.5H8.333v7.5a.833.833 0 0 1-1.666 0V10Z\" clip-rule=\"evenodd\"/>",
	"hotel":			"<path d=\"M10 22v-6.57\" /><path d=\"M12 11h.01\" /><path d=\"M12 7h.01\" /><path d=\"M14 15.43V22\" /><path d=\"M15 16a5 5 0 0 0-6 \" /><path d=\"M16 11h.01\" /><path d=\"M16 7h.01\" /><path d=\"M8 11h.01\" /><path d=\"M8 7h.01\" /><rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\"/>",	
	"info":				"<circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"M12 16v-4\" /><path d=\"M12 8h.01\" />",
	"list":             "<path fill-rule=\"evenodd\" d=\"M5.75 4.5a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5a.75.75 0 0 1-.75-.75ZM5.75 9a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5A.75.75 0 0 1 5.75 9ZM5.75 13.5a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5a.75.75 0 0 1-.75-.75ZM2 4.5a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 4.5ZM2 9a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 9ZM2 13.5a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 13.5Z\" clip-rule=\"evenodd\"/>",
	"log-out":          "<path fill-rule=\"evenodd\" d=\"M4.167 3.333a.833.833 0 0 0-.834.834v11.666a.833.833 0 0 0 .834.834H7.5a.833.833 0 0 1 0 1.666H4.167a2.5 2.5 0 0 1-2.5-2.5V4.167a2.5 2.5 0 0 1 2.5-2.5H7.5a.833.833 0 1 1 0 1.666H4.167ZM12.744 5.244a.833.833 0 0 1 1.179 0l4.166 4.167a.833.833 0 0 1 0 1.178l-4.166 4.167a.833.833 0 0 1-1.179-1.178L16.322 10l-3.578-3.577a.833.833 0 0 1 0-1.179Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.667 10c0-.46.373-.833.833-.833h10a.833.833 0 0 1 0 1.666h-10A.833.833 0 0 1 6.667 10Z\" clip-rule=\"evenodd\"/>",
	"map":              "<path fill-rule=\"evenodd\" d=\"M16.144 1.612a.75.75 0 0 1 .356.638V13.5a.75.75 0 0 1-.415.67l-4.5 2.25a.75.75 0 0 1-.67 0L6.75 14.339l-4.165 2.083A.75.75 0 0 1 1.5 15.75V4.5a.75.75 0 0 1 .415-.67l4.5-2.25a.75.75 0 0 1 .67 0L11.25 3.66l4.165-2.082a.75.75 0 0 1 .73.033ZM3 4.964v9.572l3.415-1.707a.75.75 0 0 1 .67 0l4.165 2.082L15 13.037V3.463L11.585 5.17a.75.75 0 0 1-.67 0L6.75 3.089 3 4.964Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.75 1.5a.75.75 0 0 1 .75.75V13.5a.75.75 0 0 1-1.5 0V2.25a.75.75 0 0 1 .75-.75ZM11.25 3.75a.75.75 0 0 1 .75.75v11.25a.75.75 0 0 1-1.5 0V4.5a.75.75 0 0 1 .75-.75Z\" clip-rule=\"evenodd\"/>",
	"map-pin":			"<path d=\"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\" /><circle cx=\"12\" cy=\"10\" r=\"3\" />",
	"moon":             "<path fill-rule=\"evenodd\" d=\"M8.228 3.573a6.667 6.667 0 1 0 8.199 8.2 6.136 6.136 0 0 1-8.199-8.2ZM5.37 3.071A8.333 8.333 0 0 1 10 1.667a.833.833 0 0 1 .59 1.422 4.47 4.47 0 0 0 6.32 6.322.833.833 0 0 1 1.423.59A8.333 8.333 0 1 1 5.37 3.07Z\" clip-rule=\"evenodd\"/>",
	"pen":				"<path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\"/>",
	"pencil":			"<path fill=\"none\" d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\" /><path fill=\"none\" d=\"m15 5 4 4\" />",
	"plus": 			"<path d=\"M5 12h14\"/><path d=\"M12 5v14\"/>",
	"rss":              "<path fill-rule=\"evenodd\" d=\"M2.5 9.167c0-.46.373-.834.833-.834a8.333 8.333 0 0 1 8.334 8.334.833.833 0 0 1-1.667 0A6.667 6.667 0 0 0 3.333 10a.833.833 0 0 1-.833-.833Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M2.5 3.333c0-.46.373-.833.833-.833A14.167 14.167 0 0 1 17.5 16.667a.833.833 0 0 1-1.667 0 12.5 12.5 0 0 0-12.5-12.5.833.833 0 0 1-.833-.834ZM2.5 15.833a1.667 1.667 0 1 1 3.333 0 1.667 1.667 0 0 1-3.333 0Z\" clip-rule=\"evenodd\"/>",
	"search":           "<path fill-rule=\"evenodd\" d=\"M10.083 3.667a6.417 6.417 0 1 0 0 12.833 6.417 6.417 0 0 0 0-12.833Zm-8.25 6.416a8.25 8.25 0 1 1 16.5 0 8.25 8.25 0 0 1-16.5 0Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M14.66 14.66a.917.917 0 0 1 1.296 0l3.942 3.942a.917.917 0 1 1-1.296 1.296l-3.942-3.941a.917.917 0 0 1 0-1.297Z\" clip-rule=\"evenodd\"/>",
	"send-to-back":     "<g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path d=\"M13.333 12.5a.833.833 0 0 0-.833.833v3.334c0 .46.373.833.833.833h3.334c.46 0 .833-.373.833-.833v-3.334a.833.833 0 0 0-.833-.833h-3.334Zm-2.5.833a2.5 2.5 0 0 1 2.5-2.5h3.334a2.5 2.5 0 0 1 2.5 2.5v3.334a2.5 2.5 0 0 1-2.5 2.5h-3.334a2.5 2.5 0 0 1-2.5-2.5v-3.334ZM3.333 2.5a.833.833 0 0 0-.833.833v3.334c0 .46.373.833.833.833h3.334c.46 0 .833-.373.833-.833V3.333a.833.833 0 0 0-.833-.833H3.333Zm-2.5.833a2.5 2.5 0 0 1 2.5-2.5h3.334a2.5 2.5 0 0 1 2.5 2.5v3.334a2.5 2.5 0 0 1-2.5 2.5H3.333a2.5 2.5 0 0 1-2.5-2.5V3.333ZM5.833 10.833c.46 0 .834.373.834.834v.833a.833.833 0 0 0 .833.833h.833a.833.833 0 1 1 0 1.667H7.5A2.5 2.5 0 0 1 5 12.5v-.833c0-.46.373-.834.833-.834ZM10.833 5.833c0-.46.373-.833.834-.833h.833A2.5 2.5 0 0 1 15 7.5v.833a.833.833 0 1 1-1.667 0V7.5a.833.833 0 0 0-.833-.833h-.833a.833.833 0 0 1-.834-.834Z\"/></g><defs><clipPath id=\"a\"><path d=\"M0 0h20v20H0z\"/></clipPath></defs>",
	"settings-outline": "<path d=\"M17.43 10.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46a.5.5 0 0 0-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98L12.49.42A.488.488 0 0 0 12 0H8c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1a.566.566 0 0 0-.18-.03c-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98L.46 12.63c-.19.15-.24.42-.12.64l2 3.46a.5.5 0 0 0 .61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65Zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35H9.3l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74 0-.2.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13L9.3 2h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13ZM10 6c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4Zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2Z\"/>",
	"shapes": 			"<path d=\"M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z\"/><rect width=\"7\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\"/><circle cx=\"17.5\" cy=\"17.5\" r=\"3.5\"/>",
	"sun-medium":       "<path fill-rule=\"evenodd\" d=\"M12 9a3 3 0 1 0 0 6 3 3 0 0 0 0-6Zm-5 3a5 5 0 1 1 10 0 5 5 0 0 1-10 0ZM12 2a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1ZM12 19a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0v-1a1 1 0 0 1 1-1ZM2 12a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1ZM19 12a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2h-1a1 1 0 0 1-1-1ZM19.071 4.929a1 1 0 0 1 0 1.414l-.707.707a1 1 0 1 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM7.05 16.95a1 1 0 0 1 0 1.414l-.707.707a1 1 0 0 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM4.929 4.929a1 1 0 0 1 1.414 0l.707.707A1 1 0 0 1 5.636 7.05l-.707-.707a1 1 0 0 1 0-1.414ZM16.95 16.95a1 1 0 0 1 1.414 0l.707.707a1 1 0 0 1-1.414 1.414l-.707-.707a1 1 0 0 1 0-1.414Z\" clip-rule=\"evenodd\"/>",
	"trashcan":			"<path d=\"M3 6h18\" /><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\" /><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\" />",
}

func iconSVG(name string) string {
	svg, ok := icons[name]
	if !ok {
		fmt.Println("svg icon", name, "not found!")
		return icons["rss"]
	}
	return svg
}

type svgCfg struct {
	classes map[string][]string
	stroke templ.Attributes
	viewBox string
}

func (cfg *svgCfg) Classes() string {
	classNames := make([]string, 0, 6)

	for _, v := range cfg.classes {
		classNames = append(classNames, v...)
	}

	return strings.Join(classNames, " ")
}

func (cfg *svgCfg) Stroke() templ.Attributes {
	return cfg.stroke
}

func (cfg *svgCfg) ViewBox() string {
	return cfg.viewBox
}

func newSVGCfg(fn ...func(*svgCfg)) *svgCfg {
	cfg := &svgCfg{
		classes: map[string][]string{
			"fill": {"fill-[#1F1F25]", "dark:fill-zinc-100"},
			"size": {"w-5", "h-5"},
		},
		viewBox: "0 0 20 20",
	}

	for _, f := range fn {
		f(cfg)
	}
	
	return cfg
}

func AlertStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-red-700", "dark:fill-err-prim-surf"}
	}
}

func DisabledStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-black", "opacity-20", "dark:fill-white", "dark:opacity-60"}
	}
}

func WarningStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-orange-400", "dark:fill-amber-500"}
	}
}

func OKStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-green-700", "dark:fill-green-500"}
	}
}

func NoFill() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-none", "dark:fill-none"}
	}
}

func StrokeColor(color, darkStrokeColor string) func(*svgCfg) {
    return func(cfg *svgCfg) {
        cfg.classes["stroke"] = []string{fmt.Sprintf("stroke-%s", color), fmt.Sprintf("dark:stroke-%s", darkStrokeColor) }
    }
}

func SelectedIcon(isSelected bool) func(*svgCfg) {
    return func(cfg *svgCfg) {
        if isSelected {
            (*cfg).classes["fill"] = []string{"fill-white", "dark:stroke-zinc-100"}
        }
    }
}

func SelectedIconNoFill(isSelected bool) func(*svgCfg) {
    return func(cfg *svgCfg) {
        if isSelected {
			(*cfg).classes["stroke"] = []string{"stroke-white", "dark:stroke-zinc-100"}
        }
    }
}

func Stroke(attrs templ.Attributes) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.stroke = attrs
	}
}

func Size(x int) func(*svgCfg) {
	mapSize := func(prefix string, size int) string {
		if size <= 100 {
			return prefix + fmt.Sprintf("%d", x/4)
		}

		return prefix + fmt.Sprintf("[%dpx]", x)
	}

	return func(cfg *svgCfg) {
		(*cfg).classes["size"] = []string{
			mapSize("h-", x),
			mapSize("w-", x),
		}
	}
}

func Box(x, y int) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.viewBox = fmt.Sprintf("0 0 %d %d", x, y)
	}	
}

templ SVG(name string, config ...func(*svgCfg)) {
	<svg class={ newSVGCfg(config...).Classes() } viewBox={ newSVGCfg(config...).ViewBox() } { newSVGCfg(config...).Stroke()... } >
		@templ.Raw(iconSVG(name))
	</svg>
}

templ MenuSegment(title, slug string, icon templ.Component, asset assets.AssetLoaderFunc, selected bool) {
	<div
		class={ "self-stretch px-3.5 py-2.5 justify-start items-center gap-2 inline-flex cursor-pointer",
        templ.KV("rounded-xl", !selected),
        templ.KV("rounded-lg", selected), templ.KV("bg-black", selected) }
		hx-get={ slug }
		hx-target="#body"
		hx-replace-url="true"
	>
		@icon
		
		<div
			class={ "dark:text-neutral-300 text-base font-sans leading-normal",
            templ.KV("text-neutral-800", !selected),
			templ.KV("font-bold", selected),
            templ.KV("text-white", selected) }
		>
			{ title }
		</div>
	</div>
}

templ Switch(isOn bool, onclick templ.ComponentScript) {
	<div class="flex h-8 w-14 min-w-14 p-1.5 items-end dark:flex-col-reverse gap-1 rounded-[56px] bg-gray-900 bg-opacity-20 dark:bg-white dark:bg-opacity-30" onclick={ onclick }>
		<div class="flex h-5 w-5 p-[3.33px] bg-gray-900 bg-opacity-60 dark:bg-white dark:bg-opacity-90 rounded-full justify-center items-center">
			<div class="w-[13.33px] h-[13.33px] px-[1.67px] pt-[2.78px] pb-[3.33px] justify-center items-center inline-flex">
				<svg class="h-[14px] min-w-[14px] fill-zinc-50 dark:fill-neutral-800">
					<path fill-rule="evenodd" d="M11.837 3.274a.556.556 0 0 1 0 .786l-6.11 6.11a.555.555 0 0 1-.787 0L2.163 7.394a.556.556 0 1 1 .785-.786l2.385 2.385 5.719-5.718a.556.556 0 0 1 .785 0Z" clip-rule="evenodd"></path>
				</svg>
			</div>
		</div>
	</div>
}

script onPageLoad() {
    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.body.classList.add('dark')
    }
	
	window.onclick = function(event) {
        var dropdownButtonFillinglevel = document.getElementById("dropdownButtonFillinglevel");
        var dropdownMenuFillingLevel = document.getElementById("dropdownMenuFillingLevel");
        var dropdownButtonType = document.getElementById("dropdownButtonType");
        var dropdownMenuType = document.getElementById("dropdownMenuType");
		var dropdownButtonArea = document.getElementById("dropdownButtonArea");
		var dropdownMenuArea = document.getElementById("dropdownMenuArea");
        
        if (!dropdownMenuType.contains(event.target) && !dropdownButtonType.contains(event.target)) {
            dropdownMenuType.classList.add("hidden");
        }
        
        if (!dropdownMenuFillingLevel.contains(event.target) && !dropdownButtonFillinglevel.contains(event.target)) {
            dropdownMenuFillingLevel.classList.add("hidden");
        }

		if (!dropdownMenuArea.contains(event.target) && !dropdownButtonArea.contains(event.target)) {
            dropdownMenuArea.classList.add("hidden");
        }
    }
}

script toggleDarkMode() {
    if (localStorage.theme === 'light') {
        document.body.classList.add('dark')
        localStorage.theme = 'dark'
    } else {
        document.body.classList.remove('dark')
        localStorage.theme = 'light'
    }
}

templ DarkModeToggle(isOn bool, asset assets.AssetLoaderFunc) {
	<div class="px-3.5 justify-start items-center gap-3 inline-flex">
		@SVG("sun-medium", Size(24), Box(24, 24))
		@Switch(isOn, toggleDarkMode())
		@SVG("moon", Size(20), Box(20, 20))
	</div>
}

templ Badge(count string) {
	<div class="w-5 h-5 bg-gray-900 dark:bg-white bg-opacity-95 rounded-lg justify-center items-center flex">
		<div class="w-6 h-6 text-center text-white dark:text-neutral-800 text-sm font-bold font-sans leading-6">
			{ count }
		</div>
	</div>
}

templ OverviewCard(title, count string, icon templ.Component, asset assets.AssetLoaderFunc) {
	<div class="relative px-6 pt-2.5 pb-2 bg-white dark:bg-gray-800 rounded-[15px] shadow flex-col justify-start items-start gap-[7px] inline-flex">
		<div class="flex flex-col justify-center items-start gap-4">
			@icon
			<div class="text-neutral-800 dark:text-neutral-200 text-[32px] font-bold font-heading leading-10">
				{ count }
			</div>
		</div>
		<div class="text-zinc-700 dark:text-zinc-200 text-lg font-normal font-sans leading-relaxed">
			{ title }
		</div>
		<div class="absolute right-2 bottom-[5px] w-6 h-6 flex-col justify-start items-start inline-flex">
			@SVG("arrow-right", Size(24))
		</div>
	</div>
}

func reloaderEndpoint(version string) string {
	return fmt.Sprintf("/version/%s", version)
}

func reloaderFrequency(version string) string {
	if strings.HasPrefix(version, "develop-") {
		return "every 1s"
	}

	return "every 60s"
}

func isCurrent(ctx context.Context, expect string) bool {
	name := fmt.Sprintf("%s", ctx.Value(CurrentComponent))
	return name == expect
}

templ Body(version string, l10n locale.Localizer, asset assets.AssetLoaderFunc, mainContent templ.Component) {
	<body id="body" onload={ onPageLoad() }>
		<div id="reloader" hx-get={ reloaderEndpoint(version) } hx-trigger={ reloaderFrequency(version) }></div>
		<div class="flex grid grid-cols-12 gap-2 bg-white dark:bg-neutral-800 min-h-screen">
			
			<div class="col-span-2 px-3 py-1 bg-white dark:bg-gray-800 gap-3 flex flex-col justify-between h-full fixed inset-y-0 left-0 w-64 border-r border-[#1C1C284D]">
				
				<div class="self-stretch flex flex-col gap-14">
					
					<div class="w-auto h-[90px] bg-left bg-cover bg-no-repeat
						bg-[url('/assets/d19a8ed8f207ecc2aafb61ed575aa6cf0bb1f0f533f752228fe6ce94c3575e5c/diwise-logo.svg')] 
						dark:bg-[url('/assets/f373626f4d07d2544069df8033e25d6d3a13fa150d6e53c5419179917fc434f7/diwise-logo-dark.svg')]">
					</div>
					
					<div class="self-stretch flex flex-col gap-3 p-3">
						//@SectionDivider(l10n.Get("overview"))

						@MenuSegment(l10n.Get("home"), "/home", SVG("home", SelectedIcon(isCurrent(ctx, "home"))), asset, isCurrent(ctx, "home"))
						@MenuSegment(l10n.Get("sensors"), "/sensors", SVG("rss", SelectedIcon(isCurrent(ctx, "sensors"))), asset, isCurrent(ctx, "sensors"))
						@MenuSegment(l10n.Get("objects"), "/objects", SVG("shapes", NoFill(), Box(24, 24), StrokeColor("[#1F1F25]", "white"), SelectedIconNoFill(isCurrent(ctx, "objects"))), asset, isCurrent(ctx, "objects"))
						/*
						@MenuSegment(l10n.Get("functions"), "/functions", "send-to-back", asset, isCurrent(ctx, "functions"))
						<div class="self-stretch px-3.5 py-2.5 rounded-xl justify-between items-center inline-flex">
							<div class="justify-start items-center gap-2 flex">
								@SVG("alert-triangle")
								<div class="text-neutral-800 dark:text-neutral-300 text-base font-bold font-sans leading-normal">Larm</div>
							</div>
							@Badge("5")
						</div>
						@MenuSegment("Integrationer", "/integrations", "cog", asset, isCurrent(ctx, "integrations"))
						*/
					</div>
				</div>
				<div class="flex flex-col gap-3 p-3">	
					<div class="flex flex-col gap-3 p-3 font-bold">
						//@SectionDivider("Konto")
						//@MenuSegment("Inställningar", "/settings", SVG("settings-outline"), asset, isCurrent(ctx, "settings"))
						@MenuSegment("Logga ut", "/logout", SVG("log-out"), asset, false)
					</div>
					<div class="flex flex-col gap-3 p-3">
						@DarkModeToggle(false, asset)
					</div>
				</div>
			</div>
			<div class="flex-1 ml-64 w-full col-span-10 p-8 gap-8 h-full" id="main-content">
				@mainContent
			</div>
		</div>
	</body>
}
