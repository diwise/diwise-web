package components

import (
	"context"
	"fmt"
	"strings"

	. "github.com/diwise/frontend-toolkit"
	"github.com/diwise/frontend-toolkit/pkg/middleware/csp"
)

type ComponentName string

var CurrentComponent ComponentName = "current-component"

templ SectionDivider(title string) {
	<div class="self-stretch justify-start items-center gap-2 inline-flex">
		<div class="text-neutral-800 dark:text-neutral-300 text-lg font-bold font-heading leading-normal">{ title }</div>
		<div class="grow shrink basis-0 flex-col justify-start items-start gap-2 inline-flex">
			<div class="self-stretch h-px bg-gray-900 dark:bg-white bg-opacity-30"></div>
		</div>
	</div>
}

var icons = map[string]string{
	"alert-triangle":   "<path fill-rule=\"evenodd\" d=\"M8.733 1.995a2.5 2.5 0 0 1 3.433.926v.001l6.664 11.661v.002a2.5 2.5 0 0 1-2.162 3.748H3.337a2.5 2.5 0 0 1-2.185-3.748l.001-.002 6.664-11.66V2.92a2.5 2.5 0 0 1 .916-.926Zm1.259 1.327a.833.833 0 0 0-.725.422l-.002.003-6.668 11.67a.834.834 0 0 0 .729 1.25h13.34a.833.833 0 0 0 .72-1.25l-.001-.004-6.667-11.666-.001-.003a.833.833 0 0 0-.725-.422Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M10 6.667c.46 0 .833.373.833.833v3.333a.833.833 0 0 1-1.666 0V7.5c0-.46.373-.833.833-.833ZM9.167 14.167c0-.46.373-.834.833-.834h.008a.833.833 0 0 1 0 1.667H10a.833.833 0 0 1-.833-.833Z\" clip-rule=\"evenodd\"/>",
	"arrow-left":       "<g fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M11.09 3.577a.833.833 0 0 1 0 1.179L5.844 10l5.244 5.244a.833.833 0 0 1-1.178 1.179l-5.834-5.834a.833.833 0 0 1 0-1.178l5.834-5.834a.833.833 0 0 1 1.178 0Z\"/><path d=\"M3.833 10c0-.46.373-.833.834-.833h11.666a.833.833 0 0 1 0 1.666H4.667A.833.833 0 0 1 3.833 10Z\"/></g>",
	"arrow-right":      "<path fill-rule=\"evenodd\" d=\"M4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M11.293 4.293a1 1 0 0 1 1.414 0l7 7a1 1 0 0 1 0 1.414l-7 7a1 1 0 0 1-1.414-1.414L17.586 12l-6.293-6.293a1 1 0 0 1 0-1.414Z\" clip-rule=\"evenodd\"/>",
	"battery":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4 8C3.44772 8 3 8.44772 3 9V15C3 15.5523 3.44772 16 4 16H16C16.5523 16 17 15.5523 17 15V9C17 8.44772 16.5523 8 16 8H4ZM1 9C1 7.34315 2.34315 6 4 6H16C17.6569 6 19 7.34315 19 9V15C19 16.6569 17.6569 18 16 18H4C2.34315 18 1 16.6569 1 15V9Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 10C22.5523 10 23 10.4477 23 11V13C23 13.5523 22.5523 14 22 14C21.4477 14 21 13.5523 21 13V11C21 10.4477 21.4477 10 22 10Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 10C6.55228 10 7 10.4477 7 11V13C7 13.5523 6.55228 14 6 14C5.44772 14 5 13.5523 5 13V11C5 10.4477 5.44772 10 6 10Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10 10C10.5523 10 11 10.4477 11 11V13C11 13.5523 10.5523 14 10 14C9.44771 14 9 13.5523 9 13V11C9 10.4477 9.44771 10 10 10Z\"/>",
	"battery-charging":	"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14 7C14 6.44771 14.4477 6 15 6H16C16.7956 6 17.5587 6.31607 18.1213 6.87868C18.6839 7.44129 19 8.20435 19 9V15C19 15.7956 18.6839 16.5587 18.1213 17.1213C17.5587 17.6839 16.7957 18 16 18H14C13.4477 18 13 17.5523 13 17C13 16.4477 13.4477 16 14 16H16C16.2652 16 16.5196 15.8946 16.7071 15.7071C16.8946 15.5196 17 15.2652 17 15V9C17 8.73478 16.8946 8.48043 16.7071 8.29289C16.5196 8.10536 16.2652 8 16 8H15C14.4477 8 14 7.55228 14 7Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.87868 6.87868C2.44129 6.31607 3.20435 6 4 6H6C6.55228 6 7 6.44771 7 7C7 7.55228 6.55228 8 6 8H4C3.73478 8 3.48043 8.10536 3.29289 8.29289C3.10536 8.48043 3 8.73478 3 9V15C3 15.2652 3.10536 15.5196 3.29289 15.7071C3.48043 15.8946 3.73478 16 4 16H5C5.55228 16 6 16.4477 6 17C6 17.5523 5.55228 18 5 18H4C3.20435 18 2.44129 17.6839 1.87868 17.1213C1.31607 16.5587 1 15.7956 1 15V9C1 8.20435 1.31607 7.44129 1.87868 6.87868Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.5145 6.14251C11.9881 6.42665 12.1416 7.04091 11.8575 7.51449L9.76619 11H12C12.3603 11 12.6927 11.1938 12.8702 11.5073C13.0477 11.8208 13.0429 12.2056 12.8575 12.5145L9.85749 17.5145C9.57334 17.9881 8.95908 18.1416 8.4855 17.8575C8.01192 17.5733 7.85836 16.9591 8.14251 16.4855L10.2338 13H8C7.63973 13 7.30731 12.8062 7.1298 12.4927C6.95229 12.1792 6.95715 11.7944 7.14251 11.4855L10.1425 6.4855C10.4267 6.01192 11.0409 5.85836 11.5145 6.14251Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 10C22.5523 10 23 10.4477 23 11V13C23 13.5523 22.5523 14 22 14C21.4477 14 21 13.5523 21 13V11C21 10.4477 21.4477 10 22 10Z\"/>",
	"chartline":        "<path fill-rule=\"evenodd\" d=\"M3 3v16a2 2 0 0 0 2 2h16\" /><path d=\"m19 9-5 5-4-4-3 3\" />",
	"chevron-down":     "<path fill-rule=\"evenodd\" d=\"M3.97 6.22a.75.75 0 0 1 1.06 0L9 10.19l3.97-3.97a.75.75 0 1 1 1.06 1.06l-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\"/>",
	"check":            "<path fill-rule=\"evenodd\" d=\"M20 6 9 17l-5-5\" />",
	"circle":           "<circle fill-rule=\"evenodd\" cx=\"6\" cy=\"6\" r=\"6\" />",
	"circle-check":     "<path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" /><path d=\"m9 11 3 3L22 4\" />",
	"cloud-sun":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 1C12.5523 1 13 1.44772 13 2V4C13 4.55228 12.5523 5 12 5C11.4477 5 11 4.55228 11 4V2C11 1.44772 11.4477 1 12 1Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.22288 4.22289C4.61341 3.83237 5.24657 3.83237 5.6371 4.22289L7.0471 5.63289C7.43762 6.02342 7.43762 6.65658 7.0471 7.04711C6.65657 7.43763 6.02341 7.43763 5.63288 7.04711L4.22288 5.63711C3.83236 5.24658 3.83236 4.61342 4.22288 4.22289Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19 12C19 11.4477 19.4477 11 20 11H22C22.5523 11 23 11.4477 23 12C23 12.5523 22.5523 13 22 13H20C19.4477 13 19 12.5523 19 12Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.7771 4.22289C20.1676 4.61342 20.1676 5.24658 19.7771 5.63711L18.3671 7.04711C17.9766 7.43763 17.3434 7.43763 16.9529 7.04711C16.5624 6.65658 16.5624 6.02342 16.9529 5.63289L18.3629 4.22289C18.7534 3.83237 19.3866 3.83237 19.7771 4.22289Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.52739 7.65288C10.3483 7.18573 11.2847 6.96064 12.2282 7.00366C13.1717 7.04669 14.0837 7.35606 14.8587 7.89598C15.6336 8.4359 16.2398 9.18427 16.607 10.0544C16.9742 10.9246 17.0875 11.881 16.9336 12.8129C16.8437 13.3578 16.329 13.7266 15.7841 13.6366C15.2392 13.5467 14.8704 13.032 14.9603 12.4871C15.0526 11.928 14.9847 11.3542 14.7644 10.8321C14.544 10.3099 14.1803 9.86093 13.7154 9.53698C13.2504 9.21303 12.7032 9.0274 12.1371 9.00159C11.571 8.97577 11.0091 9.11083 10.5166 9.39112C10.0366 9.66428 9.42603 9.49661 9.15287 9.01661C8.87971 8.5366 9.04739 7.92604 9.52739 7.65288\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.95855 13.1163C7.22373 12.9351 6.45259 12.9661 5.73469 13.2057C5.01679 13.4453 4.3816 13.8837 3.90288 14.4699C3.42416 15.056 3.12157 15.766 3.03024 16.5173C2.93891 17.2686 3.0626 18.0304 3.38694 18.7142C3.71127 19.398 4.22295 19.9758 4.86253 20.3804C5.50206 20.7849 6.24324 20.9998 6.99999 21H13C13.5304 21 14.0391 20.7893 14.4142 20.4142C14.7893 20.0391 15 19.5304 15 19C15 18.4696 14.7893 17.9609 14.4142 17.5858C14.0391 17.2107 13.5304 17 13 17H11.9C11.4248 17 11.0152 16.6656 10.9202 16.2C10.7688 15.4585 10.4102 14.7751 9.88595 14.2292C9.36171 13.6834 8.69337 13.2975 7.95855 13.1163ZM5.10153 11.3086C6.17838 10.9492 7.33509 10.9027 8.43732 11.1744C9.53955 11.4462 10.5421 12.0251 11.3284 12.8439C11.9222 13.4621 12.3743 14.1979 12.6579 15H13C14.0609 15 15.0783 15.4214 15.8284 16.1716C16.5786 16.9217 17 17.9391 17 19C17 20.0609 16.5786 21.0783 15.8284 21.8284C15.0783 22.5786 14.0609 23 13 23H6.99999C5.86475 22.9998 4.75267 22.6775 3.79329 22.0706C2.83391 21.4636 2.0664 20.597 1.5799 19.5713C1.09339 18.5456 0.907864 17.4029 1.04486 16.276C1.18185 15.149 1.63574 14.0841 2.35382 13.2048C3.07189 12.3255 4.02469 11.668 5.10153 11.3086Z\"/>",
	"close":            "<path d=\"M18 6 6 18\" /><path d=\"m6 6 12 12\" />",
	"cog":              "<g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path d=\"M4.697 4.697a7.5 7.5 0 1 1 10.606 10.606A7.5 7.5 0 0 1 4.697 4.697ZM10 4.167a5.833 5.833 0 1 0 0 11.666 5.833 5.833 0 0 0 0-11.666Z\"/><path d=\"M8.232 8.232a2.5 2.5 0 1 1 3.536 3.536 2.5 2.5 0 0 1-3.536-3.536ZM10 9.167a.833.833 0 1 0 0 1.666.833.833 0 0 0 0-1.666ZM10 .833c.46 0 .833.373.833.834v1.666a.833.833 0 0 1-1.666 0V1.667c0-.46.373-.834.833-.834ZM10 15.833c.46 0 .833.373.833.834v1.666a.833.833 0 0 1-1.666 0v-1.666c0-.46.373-.834.833-.834ZM12.916 15.053a.833.833 0 0 1 1.139.305l.833 1.441a.833.833 0 0 1-1.443.835l-.833-1.442a.834.834 0 0 1 .304-1.139Z\"/><path d=\"M5.417 2.062a.833.833 0 0 1 1.138.305l3.333 5.775a.833.833 0 1 1-1.443.833L5.112 3.2a.833.833 0 0 1 .305-1.138ZM15.053 12.916a.834.834 0 0 1 1.139-.304l1.442.833a.833.833 0 1 1-.835 1.443l-1.441-.833a.833.833 0 0 1-.305-1.139ZM2.062 5.416A.833.833 0 0 1 3.2 5.112l1.442.833a.833.833 0 1 1-.834 1.443l-1.442-.833a.833.833 0 0 1-.304-1.139ZM10.833 10c0-.46.373-.833.834-.833h6.666a.833.833 0 0 1 0 1.666h-6.666a.833.833 0 0 1-.834-.833ZM.833 10c0-.46.373-.833.834-.833h1.666a.833.833 0 0 1 0 1.666H1.667A.833.833 0 0 1 .833 10ZM17.938 5.416a.833.833 0 0 1-.304 1.139l-1.442.833a.833.833 0 0 1-.834-1.443l1.441-.833a.833.833 0 0 1 1.14.304ZM4.946 12.916a.833.833 0 0 1-.304 1.139l-1.442.833a.833.833 0 0 1-.834-1.443l1.442-.833a.833.833 0 0 1 1.138.304ZM14.584 2.062c.398.23.534.74.304 1.138l-.833 1.442a.833.833 0 1 1-1.443-.834l.833-1.442a.833.833 0 0 1 1.139-.304ZM9.583 10.72c.399.23.535.74.305 1.138l-3.333 5.775a.833.833 0 1 1-1.443-.833l3.333-5.775a.833.833 0 0 1 1.138-.305Z\"/></g><defs><clipPath id=\"a\"><path d=\"M0 0h20v20H0z\"/></clipPath></defs>",
	"distance":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.2929 7.29289C17.6834 6.90237 18.3166 6.90237 18.7071 7.29289L22.7071 11.2929C23.0976 11.6834 23.0976 12.3166 22.7071 12.7071L18.7071 16.7071C18.3166 17.0976 17.6834 17.0976 17.2929 16.7071C16.9024 16.3166 16.9024 15.6834 17.2929 15.2929L20.5858 12L17.2929 8.70711C16.9024 8.31658 16.9024 7.68342 17.2929 7.29289Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.70711 7.29289C7.09763 7.68342 7.09763 8.31658 6.70711 8.70711L3.41421 12L6.70711 15.2929C7.09763 15.6834 7.09763 16.3166 6.70711 16.7071C6.31658 17.0976 5.68342 17.0976 5.29289 16.7071L1.29289 12.7071C0.902369 12.3166 0.902369 11.6834 1.29289 11.2929L5.29289 7.29289C5.68342 6.90237 6.31658 6.90237 6.70711 7.29289Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 12C1 11.4477 1.44772 11 2 11H22C22.5523 11 23 11.4477 23 12C23 12.5523 22.5523 13 22 13H2C1.44772 13 1 12.5523 1 12Z\"/>",	
	"diwise":			"<path fill=\"#C24E18\" fill-rule=\"evenodd\" d=\"M2.5 9.167c0-.46.373-.834.833-.834a8.333 8.333 0 0 1 8.334 8.334.833.833 0 0 1-1.667 0A6.667 6.667 0 0 0 3.333 10a.833.833 0 0 1-.833-.833Z\" clip-rule=\"evenodd\" transform=\"scale(-1, 1) translate(-20, 0)\" /><path fill=\"#C24E18\" fill-rule=\"evenodd\" d=\"M2.5 3.333c0-.46.373-.833.833-.833A14.167 14.167 0 0 1 17.5 16.667a.833.833 0 0 1-1.667 0 12.5 12.5 0 0 0-12.5-12.5.833.833 0 0 1-.833-.834ZM2.5 15.833a1.667 1.667 0 1 1 3.333 0 1.667 1.667 0 0 1-3.333 0Z\" clip-rule=\"evenodd\" transform=\"scale(-1, 1) translate(-20, 0)\" />",
	"diwiselogo":       "<path fill-rule=\"evenodd\" d=\"M83.7963 2.90816C78.7449 3.43351 73.3905 5.21159 69.0867 7.81809C62.924 11.5157 57.8322 17.0924 54.8822 23.3965C53.5891 26.2051 52.9223 28.2054 52.0939 31.8222L51.9727 32.3879H53.286C54.4377 32.3879 54.5994 32.3475 54.5994 32.004C54.5994 30.6099 56.5997 25.2352 58.1555 22.4468C61.1863 17.052 66.0963 12.1623 71.4709 9.25268C74.9261 7.37357 79.3309 5.93898 82.9476 5.49446C83.9781 5.37323 85.1096 5.23179 85.4733 5.19138L86.1199 5.09035V3.89823C86.1199 2.86775 86.0593 2.6859 85.7764 2.70611C85.5743 2.72631 84.6853 2.80714 83.7963 2.90816Z\" fill=\"#C24E18\"/><path d=\"M84.3405 12.6068C75.935 13.6979 68.0953 19.0927 63.9936 26.6092C63.1449 28.165 62.074 30.7109 61.7912 31.8424L61.6699 32.3879H62.9429H64.236L64.7007 31.115C67.7316 22.7095 76.036 16.1023 84.886 15.0921L86.1185 14.9506V13.6777C86.1185 12.7684 86.0377 12.3845 85.8761 12.4047C85.7346 12.4249 85.0476 12.5058 84.3405 12.6068Z\" fill=\"#C24E18\"/><path d=\"M81.5729 21.8811C78.926 22.5681 77.2691 23.4975 75.2688 25.3766C73.6119 26.9325 71.9955 29.7006 71.4904 31.8222L71.3691 32.3879H72.5815C73.5715 32.3879 73.8342 32.3273 73.915 32.0242C73.9756 31.8424 74.3595 30.9938 74.7435 30.1653C76.5013 26.5081 80.6434 23.9016 84.7452 23.9016H86.1191V22.6893V21.477L84.5633 21.4972C83.6945 21.4972 82.3609 21.6588 81.5729 21.8811Z\" fill=\"#C24E18\"/><path d=\"M25.4425 29.4983C25.3617 29.5589 25.301 31.438 25.301 33.6808V37.7219L24.4524 36.853C23.3613 35.7417 22.4521 35.2972 20.8154 35.0143C16.4713 34.2465 12.3695 37.5602 12.0261 42.1267C11.7634 45.6222 13.5011 48.6934 16.5925 50.1482C17.5624 50.5928 17.9867 50.6736 19.6435 50.6736C21.3408 50.6736 21.7045 50.613 22.7147 50.1078C23.3613 49.7845 24.1897 49.1582 24.5939 48.7137L25.301 47.865V49.1178V50.3705H26.6144H27.9278V39.8637V29.3568H26.7558C26.1093 29.3568 25.5031 29.4174 25.4425 29.4983ZM22.3713 38.0048C24.0685 38.8736 25.099 40.4496 25.2606 42.4095C25.5233 45.703 23.2805 48.1479 20.0072 48.1479C17.7846 48.1479 16.2894 47.2993 15.2791 45.4808C14.774 44.5513 14.6932 44.2078 14.6932 42.7935C14.6932 41.0154 14.9761 40.2678 16.0874 39.0959C16.7137 38.4089 17.5017 37.9239 18.4312 37.6209C19.3 37.338 21.5024 37.54 22.3713 38.0048Z\" /><path d=\"M40.1523 29.5184C38.8591 29.781 38.3742 31.5389 39.344 32.4886C40.7382 33.903 43.1225 31.8622 41.9708 30.2256C41.6273 29.7406 40.7382 29.3971 40.1523 29.5184Z\" /><path d=\"M84.5849 29.5181C83.8777 29.6191 83.2109 30.4879 83.2109 31.3164C83.2109 32.2054 84.0192 32.9934 84.9284 32.9934C85.6558 32.9934 86.7267 32.0438 86.7267 31.377C86.7267 30.2455 85.676 29.3362 84.5849 29.5181Z\" /><path d=\"M101.132 35.0146C98.3032 35.6005 96.6463 37.9242 97.2727 40.4094C97.6768 42.0259 98.6265 42.7331 101.677 43.7029C104.769 44.6728 105.517 45.1779 105.517 46.3296C105.517 48.6735 101.031 49.0372 99.3539 46.8348L98.7477 46.0266L97.9395 46.4913C97.495 46.7337 97.01 47.0166 96.8484 47.1176C96.2018 47.5218 97.9193 49.4413 99.6367 50.2495C101.031 50.8759 104.223 50.8557 105.557 50.1889C106.769 49.6029 107.881 48.3906 108.062 47.4409C108.305 46.1074 108.062 44.6122 107.456 43.8242C106.789 42.9351 106.001 42.5108 103.375 41.7228C100.708 40.8944 99.9802 40.4094 99.8994 39.379C99.8186 38.3889 100.384 37.7423 101.597 37.4796C103.152 37.1361 104.729 37.6615 105.436 38.7526L105.759 39.2577L106.709 38.7122C107.214 38.4293 107.719 38.1262 107.8 38.0454C108.103 37.7827 106.163 35.8834 105.173 35.4591C104.001 34.9742 102.284 34.7721 101.132 35.0146Z\" /><path d=\"M124.086 35.0143C121.823 35.3982 119.62 37.0753 118.529 39.1969C117.984 40.3082 117.943 40.5102 117.943 42.7935C117.943 45.0363 117.984 45.2989 118.509 46.3698C119.297 47.9661 120.61 49.2592 122.247 50.027C123.52 50.6332 123.742 50.6736 125.823 50.6736C127.824 50.6736 128.167 50.613 129.279 50.1078C130.572 49.5017 132.532 47.7438 132.309 47.3801C132.249 47.2589 131.764 46.9356 131.259 46.6527L130.35 46.1476L129.582 46.9154C128.592 47.9054 127.622 48.2489 125.823 48.2287C123.136 48.2085 121.318 46.9558 120.59 44.5715L120.449 44.1068L126.773 44.0664L133.097 44.0058L133.158 43.0157C133.401 39.2373 130.693 35.7013 127.056 35.0346C125.722 34.7921 125.44 34.7921 124.086 35.0143ZM127.864 37.9239C129.056 38.4695 129.885 39.4393 130.269 40.7729L130.552 41.6821H125.48H120.429L120.57 41.1164C120.772 40.2476 121.621 38.914 122.267 38.4493C123.904 37.2976 126.086 37.0955 127.864 37.9239Z\" /><path d=\"M39.2422 42.7938V50.3708H40.5555H41.8689V42.7938V35.2167H40.5555H39.2422V42.7938Z\" /><path d=\"M51.9727 35.5194C51.9727 35.681 52.7809 38.5704 53.7709 41.9447C54.761 45.2988 55.7309 48.5721 55.9127 49.2187L56.2562 50.3906L57.6908 50.33L59.1254 50.2694L60.8429 44.7735C61.7925 41.7629 62.6209 39.3382 62.6816 39.3786C62.7422 39.4393 63.5504 41.9043 64.5 44.8745L66.2377 50.2694H67.6117H68.9857L71.0668 43.1975C72.1983 39.2978 73.1884 35.9235 73.2692 35.6608C73.4309 35.1961 73.3904 35.1961 72.1579 35.2567L70.885 35.3173L69.3494 40.6718C68.5007 43.6218 67.7531 46.1677 67.6925 46.3293C67.6319 46.491 67.2076 45.3999 66.7429 43.9047C66.2579 42.4095 65.4699 39.8434 64.9446 38.1865L64.0353 35.2163H62.7624H61.4894L60.661 37.8834C60.1963 39.3584 59.4083 41.9043 58.8829 43.5612C58.3778 45.1978 57.8929 46.4304 57.812 46.2889C57.7312 46.1475 57.024 43.743 56.236 40.9749C55.4278 38.1865 54.7408 35.7619 54.6802 35.5598C54.5994 35.2769 54.3367 35.2163 53.2658 35.2163C52.2555 35.2163 51.9727 35.2769 51.9727 35.5194Z\" /><path d=\"M83.6953 42.7938V50.3708H85.0087H86.322L86.2816 42.8342L86.221 35.3178L84.9683 35.2572L83.6953 35.1965V42.7938Z\" />",
	"download-cloud":   "<path d=\"M12 13v8l-4-4\" /><path d=\"m12 21 4-4\" /><path d=\"M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284\" />",
	"door-open":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 4.00001C12 3.44773 12.4477 3.00001 13 3.00001H16C16.7956 3.00001 17.5587 3.31608 18.1213 3.87869C18.6839 4.4413 19 5.20436 19 6.00001V20C19 20.5523 18.5523 21 18 21C17.4477 21 17 20.5523 17 20V6.00001C17 5.7348 16.8946 5.48044 16.7071 5.29291C16.5196 5.10537 16.2652 5.00001 16 5.00001H13C12.4477 5.00001 12 4.5523 12 4.00001Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 20C1 19.4477 1.44772 19 2 19H5C5.55228 19 6 19.4477 6 20C6 20.5523 5.55228 21 5 21H2C1.44772 21 1 20.5523 1 20Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 20C12 19.4477 12.4477 19 13 19H22C22.5523 19 23 19.4477 23 20C23 20.5523 22.5523 21 22 21H13C12.4477 21 12 20.5523 12 20Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10 11C10.5523 11 11 11.4477 11 12V12.01C11 12.5623 10.5523 13.01 10 13.01C9.44771 13.01 9 12.5623 9 12.01V12C9 11.4477 9.44771 11 10 11Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.7575 3.59217L6.75754 4.59216C6.5412 4.64623 6.3491 4.77108 6.21185 4.94683C6.07463 5.12254 6.00007 5.33907 6 5.56201V19.2192L12 20.7187V4.56267C11.9999 4.41024 11.965 4.25941 11.8985 4.12337C11.8318 3.98688 11.7349 3.86737 11.6152 3.77392C11.4954 3.68047 11.3559 3.61554 11.2073 3.58404C11.0587 3.55255 10.9049 3.55534 10.7575 3.59217ZM10.2725 1.65186C10.7146 1.54135 11.1761 1.53302 11.6219 1.62749C12.0678 1.72197 12.4862 1.91678 12.8455 2.19713C13.2048 2.47748 13.4955 2.83601 13.6955 3.24548C13.8958 3.65542 13.9997 4.10615 14 4.56136V20.719C13.9999 21.0228 13.9306 21.3229 13.7974 21.5959C13.6642 21.8689 13.4705 22.108 13.231 22.295C12.9916 22.482 12.7127 22.612 12.4156 22.6751C12.1184 22.7382 11.8108 22.7328 11.516 22.6593L4.75753 20.9702C4.31233 20.8589 4 20.4589 4 20V5.56201C4.0001 4.89303 4.22381 4.24312 4.63556 3.71586C5.0473 3.18861 5.62346 2.81411 6.27246 2.65187L10.2725 1.65186Z\"/>",
	"drop":				"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C12.4767 2 12.8871 2.33646 12.9806 2.80388C13.4326 5.06378 14.8008 7.26002 16.6247 8.71913C18.8043 10.4628 20 12.6294 20 15C20 17.1217 19.1571 19.1566 17.6569 20.6569C16.1566 22.1571 14.1217 23 12 23C9.87827 23 7.84344 22.1571 6.34315 20.6569C4.84285 19.1566 4 17.1217 4 15C4 12.6294 5.19568 10.4628 7.3753 8.71913C9.19919 7.26002 10.5674 5.06378 11.0194 2.80388C11.1129 2.33646 11.5233 2 12 2ZM12 6.05336C11.1944 7.69 10.0217 9.16325 8.62469 10.2809C6.80432 11.7372 6 13.3706 6 15C6 16.5913 6.63214 18.1174 7.75736 19.2426C8.88258 20.3679 10.4087 21 12 21C13.5913 21 15.1174 20.3679 16.2426 19.2426C17.3679 18.1174 18 16.5913 18 15C18 13.3706 17.1957 11.7372 15.3753 10.2809C13.9783 9.16325 12.8056 7.69 12 6.05336Z\"/>",
	"droplet":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 4.30002C7.47668 4.30002 7.8871 4.63648 7.98058 5.1039C8.22292 6.31561 8.95318 7.4947 9.92213 8.28516C11.2407 9.36085 12 10.726 12 12.25C12 15.0093 9.76516 17.3 7 17.3C4.23484 17.3 2 15.0093 2 12.25C2 10.744 2.74214 9.35368 4.0853 8.27915C5.05247 7.50542 5.77579 6.32207 6.01942 5.1039C6.1129 4.63648 6.52332 4.30002 7 4.30002ZM7.0031 7.94525C6.55461 8.66946 5.98735 9.31876 5.3347 9.84089C4.37786 10.6064 4 11.4561 4 12.25C4 13.9307 5.36516 15.3 7 15.3C8.63484 15.3 10 13.9307 10 12.25C10 11.454 9.61928 10.6192 8.65787 9.83489C8.01647 9.31164 7.45197 8.66599 7.0031 7.94525Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.0041 2.02003C14.4792 2.02199 14.8874 2.358 14.9806 2.8239C15.4326 5.0838 16.8008 7.28004 18.6247 8.73915C20.8037 10.4823 21.9993 12.6482 22 15.018C22.0061 16.5976 21.5433 18.1435 20.6701 19.4599C19.7966 20.7768 18.5517 21.8048 17.0932 22.4134C15.6348 23.022 14.0285 23.1838 12.4779 22.8784C10.9274 22.573 9.50241 21.8141 8.38369 20.6979C7.99273 20.3078 7.99201 19.6747 8.3821 19.2837C8.77219 18.8927 9.40535 18.892 9.79631 19.2821C10.6347 20.1186 11.7025 20.6873 12.8644 20.9161C14.0264 21.145 15.2301 21.0237 16.323 20.5676C17.4159 20.1116 18.3488 19.3413 19.0035 18.3544C19.6581 17.3675 20.0049 16.2084 20 15.0242L20 15.02C20 13.3906 19.1957 11.7572 17.3753 10.3009C15.9774 9.1826 14.8042 7.70827 13.9986 6.07047C13.8199 6.43301 13.6228 6.78686 13.4077 7.13055C13.1147 7.5987 12.4976 7.74069 12.0295 7.44768C11.5613 7.15468 11.4193 6.53764 11.7123 6.06949C12.3374 5.07078 12.7805 3.96919 13.0211 2.81583C13.1181 2.35071 13.529 2.01807 14.0041 2.02003Z\" />",
	"file-digit":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4 13C3.44772 13 3 13.4477 3 14V16C3 16.5523 3.44772 17 4 17C4.55228 17 5 16.5523 5 16V14C5 13.4477 4.55228 13 4 13ZM1 14C1 12.3431 2.34315 11 4 11C5.65685 11 7 12.3431 7 14V16C7 17.6569 5.65685 19 4 19C2.34315 19 1 17.6569 1 16V14Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14 1C14.5523 1 15 1.44772 15 2V7H20C20.5523 7 21 7.44772 21 8C21 8.55228 20.5523 9 20 9H14C13.4477 9 13 8.55228 13 8V2C13 1.44772 13.4477 1 14 1Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.87868 1.87868C4.44129 1.31607 5.20435 1 6 1H14.5C14.7652 1 15.0196 1.10536 15.2071 1.29289L20.7071 6.79289C20.8946 6.98043 21 7.23478 21 7.5V20C21 20.7957 20.6839 21.5587 20.1213 22.1213C19.5587 22.6839 18.7957 23 18 23H4C3.44772 23 3 22.5523 3 22C3 21.4477 3.44772 21 4 21H18C18.2652 21 18.5196 20.8946 18.7071 20.7071C18.8946 20.5196 19 20.2652 19 20V7.91421L14.0858 3H6C5.73478 3 5.48043 3.10536 5.29289 3.29289C5.10536 3.48043 5 3.73478 5 4V8C5 8.55228 4.55228 9 4 9C3.44772 9 3 8.55228 3 8V4C3 3.20435 3.31607 2.44129 3.87868 1.87868Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 12C9 11.4477 9.44771 11 10 11H12C12.5523 11 13 11.4477 13 12V18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18V13H10C9.44771 13 9 12.5523 9 12Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 18C9 17.4477 9.44771 17 10 17H14C14.5523 17 15 17.4477 15 18C15 18.5523 14.5523 19 14 19H10C9.44771 19 9 18.5523 9 18Z\"/>",
	"fillinglevel":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 6C2 5.44772 2.44772 5 3 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 5C5.55228 5 6 5.44772 6 6V20C6 20.1748 6.09745 20.4332 6.33211 20.6679C6.56676 20.9025 6.82523 21 7 21H17C17.1748 21 17.4332 20.9025 17.6679 20.6679C17.9025 20.4332 18 20.1748 18 20V6C18 5.44772 18.4477 5 19 5C19.5523 5 20 5.44772 20 6V20C20 20.8252 19.5975 21.5668 19.0821 22.0821C18.5668 22.5975 17.8252 23 17 23H7C6.17477 23 5.43324 22.5975 4.91789 22.0821C4.40255 21.5668 4 20.8252 4 20V6C4 5.44772 4.44772 5 5 5Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.33211 3.33211C9.09745 3.56676 9 3.82523 9 4V6C9 6.55228 8.55228 7 8 7C7.44772 7 7 6.55228 7 6V4C7 3.17477 7.40255 2.43324 7.91789 1.91789C8.43324 1.40255 9.17477 1 10 1H14C14.8252 1 15.5668 1.40255 16.0821 1.91789C16.5975 2.43324 17 3.17477 17 4V6C17 6.55228 16.5523 7 16 7C15.4477 7 15 6.55228 15 6V4C15 3.82523 14.9025 3.56676 14.6679 3.33211C14.4332 3.09745 14.1748 3 14 3H10C9.82523 3 9.56676 3.09745 9.33211 3.33211Z\" /><line x1=\"4.800000000000001\" y1=\"13.200000000000001\" x2=\"19.200000000000003\" y2=\"13.200000000000001\" /><rect x=\"4.800000000000001\" y=\"13.200000000000001\" width=\"14.400000000000002\" height=\"8.4\"/>",
	"filter":           "<path fill-rule=\"evenodd\" d=\"M1.5 4.5a.75.75 0 0 1 .75-.75h13.5a.75.75 0 0 1 0 1.5H2.25a.75.75 0 0 1-.75-.75ZM4.5 9a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 4.5 9ZM6.75 13.5a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75Z\" clip-rule=\"evenodd\"/>",
	"gauge":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7071 9.29291C17.0976 9.68343 17.0976 10.3166 16.7071 10.7071L12.7071 14.7071C12.3166 15.0976 11.6834 15.0976 11.2929 14.7071C10.9024 14.3166 10.9024 13.6834 11.2929 13.2929L15.2929 9.29291C15.6834 8.90238 16.3166 8.90238 16.7071 9.29291Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 4.99957C10.4201 4.99957 8.8681 5.41545 7.4999 6.2054C6.1317 6.99535 4.99556 8.13154 4.20566 9.49977C3.41576 10.868 2.99994 12.42 3 13.9999C3.00006 15.5798 3.416 17.1318 4.206 18.5C4.48217 18.9782 4.31832 19.5898 3.84004 19.866C3.36177 20.1422 2.75017 19.9783 2.474 19.5001C1.50844 17.8279 1.00007 15.9309 1 14C0.999926 12.069 1.50815 10.1721 2.47358 8.49981C3.43901 6.82754 4.82764 5.43886 6.49988 4.47336C8.17212 3.50787 10.069 2.99957 12 2.99957C13.931 2.99957 15.8279 3.50787 17.5001 4.47336C19.1724 5.43886 20.561 6.82754 21.5264 8.49981C22.4919 10.1721 23.0001 12.069 23 14C22.9999 15.9309 22.4916 17.8279 21.526 19.5001C21.2498 19.9783 20.6382 20.1422 20.16 19.866C19.6817 19.5898 19.5178 18.9782 19.794 18.5C20.584 17.1318 20.9999 15.5798 21 13.9999C21.0001 12.42 20.5842 10.868 19.7943 9.49977C19.0044 8.13154 17.8683 6.99535 16.5001 6.2054C15.1319 5.41545 13.5799 4.99957 12 4.99957Z\"/>",
	"ghost":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 10C8 9.44771 8.44772 9 9 9H9.01C9.56228 9 10.01 9.44771 10.01 10C10.01 10.5523 9.56228 11 9.01 11H9C8.44772 11 8 10.5523 8 10Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14 10C14 9.44771 14.4477 9 15 9H15.01C15.5623 9 16.01 9.44771 16.01 10C16.01 10.5523 15.5623 11 15.01 11H15C14.4477 11 14 10.5523 14 10Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.63604 3.63604C7.32387 1.94821 9.61305 1 12 1C14.3869 1 16.6761 1.94821 18.364 3.63604C20.0518 5.32387 21 7.61305 21 10V22C21 22.4045 20.7564 22.7691 20.3827 22.9239C20.009 23.0787 19.5789 22.9931 19.2929 22.7071L17 20.4142L15.2071 22.2071C14.8166 22.5976 14.1834 22.5976 13.7929 22.2071L12 20.4142L10.2071 22.2071C9.81658 22.5976 9.18342 22.5976 8.79289 22.2071L7 20.4142L4.70711 22.7071C4.42111 22.9931 3.99099 23.0787 3.61732 22.9239C3.24364 22.7691 3 22.4045 3 22V10C3 7.61305 3.94821 5.32387 5.63604 3.63604ZM12 3C10.1435 3 8.36301 3.7375 7.05025 5.05025C5.7375 6.36301 5 8.14348 5 10V19.5858L6.29289 18.2929C6.68342 17.9024 7.31658 17.9024 7.70711 18.2929L9.5 20.0858L11.2929 18.2929C11.6834 17.9024 12.3166 17.9024 12.7071 18.2929L14.5 20.0858L16.2929 18.2929C16.6834 17.9024 17.3166 17.9024 17.7071 18.2929L19 19.5858V10C19 8.14348 18.2625 6.36301 16.9497 5.05025C15.637 3.7375 13.8565 3 12 3Z\"/>",
	"graph":            "<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.5 2C4.05228 2 4.5 2.44772 4.5 3V20H21.5C22.0523 20 22.5 20.4477 22.5 21C22.5 21.5523 22.0523 22 21.5 22H3.5C2.94772 22 2.5 21.5523 2.5 21V3C2.5 2.44772 2.94772 2 3.5 2Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.7929 8.29289C19.1834 7.90237 19.8166 7.90237 20.2071 8.29289C20.5976 8.68342 20.5976 9.31658 20.2071 9.70711L15.2071 14.7071C14.8166 15.0976 14.1834 15.0976 13.7929 14.7071L10.5 11.4142L8.20711 13.7071C7.81658 14.0976 7.18342 14.0976 6.79289 13.7071C6.40237 13.3166 6.40237 12.6834 6.79289 12.2929L9.79289 9.29289C10.1834 8.90237 10.8166 8.90237 11.2071 9.29289L14.5 12.5858L18.7929 8.29289Z\"/>",
	"hammer":           "<path d=\"M15 12L6.49998 20.5C5.66998 21.33 4.32998 21.33 3.49998 20.5C3.30284 20.3031 3.14645 20.0693 3.03974 19.8119C2.93304 19.5545 2.87811 19.2786 2.87811 19C2.87811 18.7214 2.93304 18.4455 3.03974 18.1881C3.14645 17.9307 3.30284 17.6969 3.49998 17.5L12 9\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M17.64 15L22 10.64\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M20.91 11.7L19.66 10.45C19.06 9.84996 18.73 9.04996 18.73 8.19996V7.33996L16.01 4.59996C15.4936 4.08058 14.8798 3.66832 14.2036 3.38688C13.5275 3.10544 12.8024 2.96036 12.07 2.95996H9L9.92 3.77996C10.5735 4.35935 11.0967 5.07066 11.4552 5.867C11.8137 6.66335 11.9994 7.52663 12 8.39996V9.95996L14 11.96H16.47L18.73 13.87\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>",
	"help-circle":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3ZM1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.2581 8.02432C11.7926 7.94447 11.3138 8.03195 10.9066 8.27127C10.4994 8.51058 10.1901 8.88629 10.0333 9.33184C9.85006 9.85283 9.27915 10.1266 8.75816 9.94333C8.23717 9.76006 7.96339 9.18915 8.14667 8.66816C8.46014 7.77705 9.07887 7.02563 9.89327 6.547C10.7077 6.06837 11.6652 5.89341 12.5962 6.05311C13.5273 6.2128 14.3718 6.69686 14.9801 7.41953C15.5883 8.14205 15.9213 9.05648 15.92 10.0009C15.9195 11.5313 14.7849 12.5419 13.9747 13.0821C13.5391 13.3725 13.1106 13.586 12.7949 13.7263C12.6356 13.7971 12.5015 13.8508 12.4049 13.8876C12.3565 13.9061 12.3173 13.9203 12.2887 13.9305L12.254 13.9427L12.2429 13.9464L12.239 13.9478L12.2375 13.9483C12.2375 13.9483 12.2362 13.9487 11.92 13L12.2362 13.9487C11.7123 14.1233 11.146 13.8402 10.9713 13.3162C10.7968 12.7926 11.0795 12.2267 11.6027 12.0517L11.6187 12.0461C11.6341 12.0406 11.6593 12.0314 11.6929 12.0186C11.7603 11.9929 11.8606 11.9529 11.9826 11.8987C12.2294 11.789 12.5509 11.6275 12.8653 11.4179C13.5549 10.9582 13.92 10.4691 13.92 10L13.92 9.99851C13.9207 9.52619 13.7542 9.06886 13.4501 8.70753C13.1459 8.34619 12.7236 8.10417 12.2581 8.02432Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 17C11 16.4477 11.4477 16 12 16H12.01C12.5623 16 13.01 16.4477 13.01 17C13.01 17.5523 12.5623 18 12.01 18H12C11.4477 18 11 17.5523 11 17Z\"/>",
	"home":             "<path fill-rule=\"evenodd\" d=\"M9.488 1.009a.833.833 0 0 1 1.024 0l7.5 5.833c.203.158.321.4.321.658v9.167a2.5 2.5 0 0 1-2.5 2.5H4.167a2.5 2.5 0 0 1-2.5-2.5V7.5c0-.257.118-.5.321-.658l7.5-5.833ZM3.333 7.907v8.76a.833.833 0 0 0 .834.833h11.666a.833.833 0 0 0 .834-.833v-8.76L10 2.722 3.333 7.907Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.667 10c0-.46.373-.833.833-.833h5c.46 0 .833.373.833.833v8.333a.833.833 0 0 1-1.666 0v-7.5H8.333v7.5a.833.833 0 0 1-1.666 0V10Z\" clip-rule=\"evenodd\"/>",
	"hotel":            "<path d=\"M10 22v-6.57\" /><path d=\"M12 11h.01\" /><path d=\"M12 7h.01\" /><path d=\"M14 15.43V22\" /><path d=\"M15 16a5 5 0 0 0-6 \" /><path d=\"M16 11h.01\" /><path d=\"M16 7h.01\" /><path d=\"M8 11h.01\" /><path d=\"M8 7h.01\" /><rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\"/>",
	"info":             "<circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"M12 16v-4\" /><path d=\"M12 8h.01\" />",
	"lightbulb":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.05025 3.05025C8.36301 1.7375 10.1435 1 12 1C13.8565 1 15.637 1.7375 16.9497 3.05025C18.2625 4.36301 19 6.14349 19 8C19 9.53847 18.4119 11.1128 17.1899 12.2244C16.4678 12.9494 16.1244 13.477 15.9806 14.1961C15.8723 14.7377 15.3454 15.0889 14.8039 14.9806C14.2623 14.8723 13.9111 14.3454 14.0194 13.8039C14.2744 12.5287 14.9268 11.659 15.7929 10.7929C15.8053 10.7805 15.818 10.7684 15.831 10.7567C16.5948 10.0693 17 9.05279 17 8C17 6.67392 16.4732 5.40215 15.5355 4.46447C14.5979 3.52678 13.3261 3 12 3C10.6739 3 9.40215 3.52678 8.46447 4.46447C7.52678 5.40215 7 6.67392 7 8C7 8.80425 7.13863 9.72442 8.20711 10.7929C8.96334 11.5491 9.72386 12.5203 9.98058 13.8039C10.0889 14.3454 9.73768 14.8723 9.19612 14.9806C8.65456 15.0889 8.12773 14.7377 8.01942 14.1961C7.87614 13.4797 7.43666 12.8509 6.79289 12.2071C5.26137 10.6756 5 9.19575 5 8C5 6.14348 5.7375 4.36301 7.05025 3.05025Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 18C8 17.4477 8.44772 17 9 17H15C15.5523 17 16 17.4477 16 18C16 18.5523 15.5523 19 15 19H9C8.44772 19 8 18.5523 8 18Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 22C9 21.4477 9.44772 21 10 21H14C14.5523 21 15 21.4477 15 22C15 22.5523 14.5523 23 14 23H10C9.44772 23 9 22.5523 9 22Z\"/>",
	"list":             "<path fill-rule=\"evenodd\" d=\"M5.75 4.5a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5a.75.75 0 0 1-.75-.75ZM5.75 9a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5A.75.75 0 0 1 5.75 9ZM5.75 13.5a.75.75 0 0 1 .75-.75h9.75a.75.75 0 0 1 0 1.5H6.5a.75.75 0 0 1-.75-.75ZM2 4.5a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 4.5ZM2 9a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 9ZM2 13.5a.75.75 0 0 1 .75-.75h.007a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 13.5Z\" clip-rule=\"evenodd\"/>",
	"log-out":          "<path fill-rule=\"evenodd\" d=\"M4.167 3.333a.833.833 0 0 0-.834.834v11.666a.833.833 0 0 0 .834.834H7.5a.833.833 0 0 1 0 1.666H4.167a2.5 2.5 0 0 1-2.5-2.5V4.167a2.5 2.5 0 0 1 2.5-2.5H7.5a.833.833 0 1 1 0 1.666H4.167ZM12.744 5.244a.833.833 0 0 1 1.179 0l4.166 4.167a.833.833 0 0 1 0 1.178l-4.166 4.167a.833.833 0 0 1-1.179-1.178L16.322 10l-3.578-3.577a.833.833 0 0 1 0-1.179Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.667 10c0-.46.373-.833.833-.833h10a.833.833 0 0 1 0 1.666h-10A.833.833 0 0 1 6.667 10Z\" clip-rule=\"evenodd\"/>",
	"map":              "<path fill-rule=\"evenodd\" d=\"M16.144 1.612a.75.75 0 0 1 .356.638V13.5a.75.75 0 0 1-.415.67l-4.5 2.25a.75.75 0 0 1-.67 0L6.75 14.339l-4.165 2.083A.75.75 0 0 1 1.5 15.75V4.5a.75.75 0 0 1 .415-.67l4.5-2.25a.75.75 0 0 1 .67 0L11.25 3.66l4.165-2.082a.75.75 0 0 1 .73.033ZM3 4.964v9.572l3.415-1.707a.75.75 0 0 1 .67 0l4.165 2.082L15 13.037V3.463L11.585 5.17a.75.75 0 0 1-.67 0L6.75 3.089 3 4.964Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M6.75 1.5a.75.75 0 0 1 .75.75V13.5a.75.75 0 0 1-1.5 0V2.25a.75.75 0 0 1 .75-.75ZM11.25 3.75a.75.75 0 0 1 .75.75v11.25a.75.75 0 0 1-1.5 0V4.5a.75.75 0 0 1 .75-.75Z\" clip-rule=\"evenodd\"/>",
	"map-pin":          "<path d=\"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\" /><circle cx=\"12\" cy=\"10\" r=\"3\" />",
	"menu": 			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 12C3 11.4477 3.44772 11 4 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13H4C3.44772 13 3 12.5523 3 12Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 18C3 17.4477 3.44772 17 4 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H4C3.44772 19 3 18.5523 3 18Z\"/>",
	"moon":             "<path fill-rule=\"evenodd\" d=\"M8.228 3.573a6.667 6.667 0 1 0 8.199 8.2 6.136 6.136 0 0 1-8.199-8.2ZM5.37 3.071A8.333 8.333 0 0 1 10 1.667a.833.833 0 0 1 .59 1.422 4.47 4.47 0 0 0 6.32 6.322.833.833 0 0 1 1.423.59A8.333 8.333 0 1 1 5.37 3.07Z\" clip-rule=\"evenodd\"/>",
	"pen":              "<path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\"/>",
	"pencil":           "<path fill=\"none\" d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\" /><path fill=\"none\" d=\"m15 5 4 4\" />",
	"person-plus":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.05025 14.0503C4.36301 12.7375 6.14348 12 8 12C9.85652 12 11.637 12.7375 12.9497 14.0503C14.2625 15.363 15 17.1435 15 19C15 19.5523 14.5523 20 14 20C13.4477 20 13 19.5523 13 19C13 17.6739 12.4732 16.4021 11.5355 15.4645C10.5979 14.5268 9.32608 14 8 14C6.67392 14 5.40215 14.5268 4.46447 15.4645C3.52678 16.4021 3 17.6739 3 19C3 19.5523 2.55228 20 2 20C1.44772 20 1 19.5523 1 19C1 17.1435 1.7375 15.363 3.05025 14.0503Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 6C6.34315 6 5 7.34315 5 9C5 10.6569 6.34315 12 8 12C9.65685 12 11 10.6569 11 9C11 7.34315 9.65685 6 8 6ZM3 9C3 6.23858 5.23858 4 8 4C10.7614 4 13 6.23858 13 9C13 11.7614 10.7614 14 8 14C5.23858 14 3 11.7614 3 9Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19 7C19.5523 7 20 7.44772 20 8V14C20 14.5523 19.5523 15 19 15C18.4477 15 18 14.5523 18 14V8C18 7.44772 18.4477 7 19 7Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 11C15 10.4477 15.4477 10 16 10H22C22.5523 10 23 10.4477 23 11C23 11.5523 22.5523 12 22 12H16C15.4477 12 15 11.5523 15 11Z\"/>",
	"plus":             "<path d=\"M5 12h14\"/><path d=\"M12 5v14\"/>",
	"rss":              "<path fill-rule=\"evenodd\" d=\"M2.5 9.167c0-.46.373-.834.833-.834a8.333 8.333 0 0 1 8.334 8.334.833.833 0 0 1-1.667 0A6.667 6.667 0 0 0 3.333 10a.833.833 0 0 1-.833-.833Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M2.5 3.333c0-.46.373-.833.833-.833A14.167 14.167 0 0 1 17.5 16.667a.833.833 0 0 1-1.667 0 12.5 12.5 0 0 0-12.5-12.5.833.833 0 0 1-.833-.834ZM2.5 15.833a1.667 1.667 0 1 1 3.333 0 1.667 1.667 0 0 1-3.333 0Z\" clip-rule=\"evenodd\"/>",
	"search":           "<path fill-rule=\"evenodd\" d=\"M10.083 3.667a6.417 6.417 0 1 0 0 12.833 6.417 6.417 0 0 0 0-12.833Zm-8.25 6.416a8.25 8.25 0 1 1 16.5 0 8.25 8.25 0 0 1-16.5 0Z\" clip-rule=\"evenodd\"/><path fill-rule=\"evenodd\" d=\"M14.66 14.66a.917.917 0 0 1 1.296 0l3.942 3.942a.917.917 0 1 1-1.296 1.296l-3.942-3.941a.917.917 0 0 1 0-1.297Z\" clip-rule=\"evenodd\"/>",
	"send-to-back":     "<g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path d=\"M13.333 12.5a.833.833 0 0 0-.833.833v3.334c0 .46.373.833.833.833h3.334c.46 0 .833-.373.833-.833v-3.334a.833.833 0 0 0-.833-.833h-3.334Zm-2.5.833a2.5 2.5 0 0 1 2.5-2.5h3.334a2.5 2.5 0 0 1 2.5 2.5v3.334a2.5 2.5 0 0 1-2.5 2.5h-3.334a2.5 2.5 0 0 1-2.5-2.5v-3.334ZM3.333 2.5a.833.833 0 0 0-.833.833v3.334c0 .46.373.833.833.833h3.334c.46 0 .833-.373.833-.833V3.333a.833.833 0 0 0-.833-.833H3.333Zm-2.5.833a2.5 2.5 0 0 1 2.5-2.5h3.334a2.5 2.5 0 0 1 2.5 2.5v3.334a2.5 2.5 0 0 1-2.5 2.5H3.333a2.5 2.5 0 0 1-2.5-2.5V3.333ZM5.833 10.833c.46 0 .834.373.834.834v.833a.833.833 0 0 0 .833.833h.833a.833.833 0 1 1 0 1.667H7.5A2.5 2.5 0 0 1 5 12.5v-.833c0-.46.373-.834.833-.834ZM10.833 5.833c0-.46.373-.833.834-.833h.833A2.5 2.5 0 0 1 15 7.5v.833a.833.833 0 1 1-1.667 0V7.5a.833.833 0 0 0-.833-.833h-.833a.833.833 0 0 1-.834-.834Z\"/></g><defs><clipPath id=\"a\"><path d=\"M0 0h20v20H0z\"/></clipPath></defs>",
	"settings-outline": "<path d=\"M17.43 10.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46a.5.5 0 0 0-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98L12.49.42A.488.488 0 0 0 12 0H8c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1a.566.566 0 0 0-.18-.03c-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98L.46 12.63c-.19.15-.24.42-.12.64l2 3.46a.5.5 0 0 0 .61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65Zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35H9.3l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74 0-.2.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13L9.3 2h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13ZM10 6c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4Zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2Z\"/>",
	"shapes":           "<path d=\"M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z\"/><rect width=\"7\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\"/><circle cx=\"17.5\" cy=\"17.5\" r=\"3.5\"/>",
	"shuffle":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.1 7C15.0815 7 14.1299 7.47285 13.6437 8.23688C13.6347 8.251 13.6253 8.26489 13.6157 8.27854L7.50879 16.8882C6.52193 18.2451 5.02217 19 3.4 19H2C1.44772 19 1 18.5523 1 18C1 17.4477 1.44772 17 2 17H3.4C4.37609 17 5.27493 16.5565 5.888 15.7163L11.9708 7.14059C12.8874 5.71955 14.5268 5 16.1 5H22C22.5523 5 23 5.44772 23 6C23 6.55228 22.5523 7 22 7H16.1Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.2929 1.29289C17.6834 0.902369 18.3166 0.902369 18.7071 1.29289L22.7071 5.29289C23.0976 5.68342 23.0976 6.31658 22.7071 6.70711L18.7071 10.7071C18.3166 11.0976 17.6834 11.0976 17.2929 10.7071C16.9024 10.3166 16.9024 9.68342 17.2929 9.29289L20.5858 6L17.2929 2.70711C16.9024 2.31658 16.9024 1.68342 17.2929 1.29289Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 6C1 5.44772 1.44772 5 2 5H3.9C5.79326 5 7.51843 6.12496 8.38047 7.7259C8.64231 8.21217 8.46037 8.81863 7.9741 9.08047C7.48783 9.34231 6.88137 9.16037 6.61953 8.6741C6.08157 7.67504 5.00674 7 3.9 7H2C1.44772 7 1 6.55228 1 6Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.77 14.552C12.2383 14.2593 12.8553 14.4017 13.148 14.87L13.6457 15.6663C14.1592 16.4707 15.1367 17 16.1 17H22C22.5523 17 23 17.4478 23 18C23 18.5523 22.5523 19 22 19H16.1C14.4645 19 12.8433 18.1307 11.9563 16.7369L11.952 16.7301L11.452 15.93C11.1593 15.4617 11.3017 14.8447 11.77 14.552Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.2929 13.2929C17.6834 12.9024 18.3166 12.9024 18.7071 13.2929L22.7071 17.2929C23.0976 17.6834 23.0976 18.3166 22.7071 18.7071L18.7071 22.7071C18.3166 23.0976 17.6834 23.0976 17.2929 22.7071C16.9024 22.3166 16.9024 21.6834 17.2929 21.2929L20.5858 18L17.2929 14.7071C16.9024 14.3166 16.9024 13.6834 17.2929 13.2929Z\" />",
	"sun-medium":       "<path fill-rule=\"evenodd\" d=\"M12 9a3 3 0 1 0 0 6 3 3 0 0 0 0-6Zm-5 3a5 5 0 1 1 10 0 5 5 0 0 1-10 0ZM12 2a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1ZM12 19a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0v-1a1 1 0 0 1 1-1ZM2 12a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1ZM19 12a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2h-1a1 1 0 0 1-1-1ZM19.071 4.929a1 1 0 0 1 0 1.414l-.707.707a1 1 0 1 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM7.05 16.95a1 1 0 0 1 0 1.414l-.707.707a1 1 0 0 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM4.929 4.929a1 1 0 0 1 1.414 0l.707.707A1 1 0 0 1 5.636 7.05l-.707-.707a1 1 0 0 1 0-1.414ZM16.95 16.95a1 1 0 0 1 1.414 0l.707.707a1 1 0 0 1-1.414 1.414l-.707-.707a1 1 0 0 1 0-1.414Z\" clip-rule=\"evenodd\"/>",
	"table":            "<path fill-rule=\"evenodd\" d=\"M12 3v18\" /><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" /><path d=\"M3 9h18\" /><path d=\"M3 15h18\" />",
	"thermometer":		"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3C11.7348 3 11.4804 3.10536 11.2929 3.29289C11.1054 3.48043 11 3.73478 11 4V14.54C11 14.8973 10.8094 15.2274 10.5 15.406C9.92808 15.7362 9.48109 16.2459 9.22836 16.8561C8.97564 17.4662 8.9313 18.1427 9.10222 18.7806C9.27315 19.4185 9.64979 19.9821 10.1737 20.3842C10.6977 20.7862 11.3396 21.0041 12 21.0041C12.6604 21.0041 13.3024 20.7862 13.8263 20.3842C14.3502 19.9821 14.7269 19.4185 14.8978 18.7806C15.0687 18.1427 15.0244 17.4662 14.7716 16.8561C14.5189 16.2459 14.0719 15.7362 13.5 15.406C13.1906 15.2274 13 14.8973 13 14.54V4C13 3.73478 12.8946 3.48043 12.7071 3.29289C12.5196 3.10536 12.2652 3 12 3ZM9.87868 1.87868C10.4413 1.31607 11.2044 1 12 1C12.7957 1 13.5587 1.31607 14.1213 1.87868C14.6839 2.44129 15 3.20435 15 4V14.0041C15.7141 14.5397 16.275 15.2592 16.6194 16.0907C17.0406 17.1076 17.1145 18.235 16.8296 19.2982C16.5448 20.3614 15.917 21.3008 15.0438 21.9709C14.1706 22.6409 13.1007 23.0041 12 23.0041C10.8993 23.0041 9.82942 22.6409 8.9562 21.9709C8.08297 21.3008 7.45525 20.3614 7.17037 19.2982C6.8855 18.235 6.9594 17.1076 7.3806 16.0907C7.725 15.2592 8.28585 14.5397 9 14.0041V4C9 3.20435 9.31607 2.44129 9.87868 1.87868Z\"/>",
	"timer":			"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 2C9 1.44772 9.44772 1 10 1H14C14.5523 1 15 1.44772 15 2C15 2.55228 14.5523 3 14 3H10C9.44772 3 9 2.55228 9 2Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.7071 10.2929C16.0976 10.6834 16.0976 11.3166 15.7071 11.7071L12.7071 14.7071C12.3166 15.0976 11.6834 15.0976 11.2929 14.7071C10.9024 14.3166 10.9024 13.6834 11.2929 13.2929L14.2929 10.2929C14.6834 9.90237 15.3166 9.90237 15.7071 10.2929Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 7C8.13401 7 5 10.134 5 14C5 17.866 8.13401 21 12 21C15.866 21 19 17.866 19 14C19 10.134 15.866 7 12 7ZM3 14C3 9.02944 7.02944 5 12 5C16.9706 5 21 9.02944 21 14C21 18.9706 16.9706 23 12 23C7.02944 23 3 18.9706 3 14Z\"/>",
	"tip":              "<g fill-rule=\"evenodd\" id=\"Tip\" clip-path=\"url(#clip0_1424_3946)\"><rect id=\"Rectangle 1\" x=\"6.5\" y=\"16\" width=\"20\" height=\"20\" transform=\"rotate(-45 6.5 16)\"></g><defs><clipPath id=\"clip0_1424_3946\"><rect width=\"40\" height=\"8\" transform=\"translate(0.5)\"/></clipPath></defs>",
	"tipside":			"<g clip-path=\"url(#clip0_2030_10288)\"><rect x=\"8\" y=\"6.5\" width=\"20\" height=\"20\" transform=\"rotate(135 8 6.5)\" /></g><defs><clipPath id=\"clip0_2030_10288\"><rect width=\"40\" height=\"8\" fill=\"white\" transform=\"translate(0.5)\"/></clipPath></defs>",
	"trashcan":         "<path d=\"M3 6h18\" /><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\" /><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\" />",
	"zap":				"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.3982 1.08275C13.8054 1.25952 14.0474 1.68359 13.9923 2.12409L13.1328 9.00006H21C21.388 9.00006 21.741 9.22452 21.9056 9.5759C22.0702 9.92729 22.0166 10.3422 21.7682 10.6402L11.7682 22.6402C11.484 22.9813 11.009 23.0941 10.6018 22.9174C10.1946 22.7406 9.95267 22.3165 10.0077 21.876L10.8672 15.0001H3.00001C2.61199 15.0001 2.259 14.7756 2.09442 14.4242C1.92984 14.0728 1.98339 13.658 2.23179 13.3599L12.2318 1.35987C12.516 1.01884 12.991 0.905986 13.3982 1.08275ZM5.13505 13.0001H12C12.2868 13.0001 12.5599 13.1232 12.7497 13.3383C12.9395 13.5533 13.0279 13.8395 12.9923 14.1241L12.4154 18.7396L18.865 11.0001H12C11.7132 11.0001 11.4402 10.8769 11.2503 10.6619C11.0605 10.4468 10.9722 10.1606 11.0077 9.87602L11.5847 5.26051L5.13505 13.0001Z\"/>",
}

func iconSVG(name string) string {
	svg, ok := icons[name]
	if !ok {
		fmt.Println("svg icon", name, "not found!")
		return icons["rss"]
	}
	return svg
}

type svgCfg struct {
	classes map[string][]string
	stroke  templ.Attributes
	viewBox string
}

func (cfg *svgCfg) Classes() string {
	classNames := make([]string, 0, 6)

	for _, v := range cfg.classes {
		classNames = append(classNames, v...)
	}

	return strings.Join(classNames, " ")
}

func (cfg *svgCfg) Stroke() templ.Attributes {
	return cfg.stroke
}

func (cfg *svgCfg) ViewBox() string {
	return cfg.viewBox
}

func newSVGCfg(fn ...func(*svgCfg)) *svgCfg {
	cfg := &svgCfg{
		classes: map[string][]string{
			"fill": {"fill-primary-dark", "dark:fill-zinc-100"},
			"size": {"w-5", "h-5"},
		},
		viewBox: "0 0 20 20",
	}

	for _, f := range fn {
		f(cfg)
	}

	return cfg
}

func AlertStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-red-700", "dark:fill-err-prim-surf"}
	}
}

func DisabledStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-black", "opacity-20", "dark:fill-white", "dark:opacity-60"}
	}
}

func WarningStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-orange-400", "dark:fill-amber-500"}
	}
}

func OKStyle() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-green-700", "dark:fill-green-500"}
	}
}

func NoFill() func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{"fill-none", "dark:fill-none"}
	}
}

func FillColor(color, darkColor string) func(*svgCfg) {
	return func(cfg *svgCfg) {
		(*cfg).classes["fill"] = []string{fmt.Sprintf("fill-%s", color), fmt.Sprintf("dark:fill-%s", darkColor)}
	}
}

func StrokeColor(color, darkStrokeColor string) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.classes["stroke"] = []string{fmt.Sprintf("stroke-%s", color), fmt.Sprintf("dark:stroke-%s", darkStrokeColor)}
	}
}

func HoverStroke() func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.classes["group-hover:stroke"] = []string{"group-hover:stroke-primary-dark"}
	}
}

func SelectedIcon(isSelected bool) func(*svgCfg) {
	return func(cfg *svgCfg) {
		if isSelected {
			(*cfg).classes["fill"] = []string{"fill-white"}
			(*cfg).classes["dark:fill"] = []string{"dark:fill-black"}
		}
	}
}

func SelectedIconNoFill(isSelected bool) func(*svgCfg) {
	return func(cfg *svgCfg) {
		if isSelected {
			(*cfg).classes["stroke"] = []string{"stroke-white", "dark:stroke-primary-dark"}
		}
	}
}

func Stroke(attrs templ.Attributes) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.stroke = attrs
	}
}

func Size(x int) func(*svgCfg) {
	mapSize := func(prefix string, size int) string {
		if size <= 100 {
			return prefix + fmt.Sprintf("%d", x/4)
		}

		return prefix + fmt.Sprintf("[%dpx]", x)
	}

	return func(cfg *svgCfg) {
		(*cfg).classes["size"] = []string{
			mapSize("h-", x),
			mapSize("w-", x),
		}
	}
}

func Box(x, y int) func(*svgCfg) {
	return func(cfg *svgCfg) {
		cfg.viewBox = fmt.Sprintf("0 0 %d %d", x, y)
	}
}

templ SVG(name string, config ...func(*svgCfg)) {
	<svg class={ newSVGCfg(config...).Classes() } viewBox={ newSVGCfg(config...).ViewBox() } { newSVGCfg(config...).Stroke()... }>
		@templ.Raw(iconSVG(name))
	</svg>
}

templ MenuSegment(title, slug string, icon templ.Component, asset AssetLoaderFunc, selected bool) {
	<div
		class={ "flex px-3 py-2.5 justify-start items-center gap-2.5 self-stretch cursor-pointer",
        templ.KV("rounded-xl", !selected),
		templ.KV("hover:bg-tertiary-surface-hover", !selected),
		templ.KV("dark:hover:bg-white-30", !selected),
        templ.KV("rounded-lg", selected), 
		templ.KV("bg-black", selected),
		templ.KV("dark:bg-primary-surface-dark", selected) }
		hx-get={ slug }
		hx-target="#body"
		hx-replace-url="true"
	>
		@icon
		<div
			class={ "text-base font-sans leading-normal lg:block hidden",
            templ.KV("text-neutral-800", !selected),
			templ.KV("font-bold", selected),
            templ.KV("text-white", selected),
			templ.KV("dark:text-primary-dark", selected),
			templ.KV("dark:text-secondary", !selected) }
		>
			{ title }
		</div>
	</div>
}

templ NewDarkModeToggle(isOn bool, asset AssetLoaderFunc, l10n Localizer) {
	<div id="NewDarkModeToggle" class="flex items-center bg-tertiary-surface dark:bg-primary-surface-white gap-2 rounded-full p-1.5 text-sm font-bold cursor-pointer">
		<div class="toggle-light flex items-center bg-primary-surface dark:bg-transparent rounded-full dark:hover:bg-white-30 text-white dark:text-white py-2 px-3 gap-2">
			@SVG("sun-medium", Size(24), Box(24, 24), FillColor("white", "primary-dark"))
			{ l10n.Get("light") }
		</div>
		<div class="toggle-dark flex items-center py-2 px-3.5 gap-2 dark:bg-primary-surface-dark hover:bg-tertiary-surface-hover rounded-full dark:text-black">
			@SVG("moon", Size(20), Box(20, 20), FillColor("primary-dark", "primary-dark"))
			{ l10n.Get("dark") }
		</div>
	</div>	
}

templ NewDarkModeToggleMdMenu(isOn bool, asset AssetLoaderFunc) {
	<div id="NewDarkModeToggle" class="flex md:flex-col items-center bg-tertiary-surface dark:bg-primary-surface-white gap-2 rounded-full p-1.5 text-sm font-bold cursor-pointer">
		<div class="toggle-light flex items-center p-2 gap-2 bg-primary-surface dark:bg-transparent rounded-full dark:hover:bg-white-30 text-white dark:text-white">
			@SVG("sun-medium", Size(24), Box(24, 24), FillColor("white", "primary-dark"))
		</div>
		<div class="toggle-dark flex items-center p-2 gap-2 dark:bg-primary-surface-dark hover:bg-tertiary-surface-hover rounded-full dark:text-black">
			@SVG("moon", Size(20), Box(20, 20), FillColor("primary-dark", "primary-dark"))
		</div>
	</div>	
}

templ Badge(count string) {
	<div class="w-5 h-5 bg-gray-900 dark:bg-white bg-opacity-95 rounded-lg justify-center items-center flex">
		<div class="w-6 h-6 text-center text-white dark:text-neutral-800 text-sm font-bold font-sans leading-6">
			{ count }
		</div>
	</div>
}

templ OverviewCard(title, url string, count int, icon templ.Component, asset AssetLoaderFunc) {
	<div
		class="flex items-center flex-1 bg-white dark:bg-gray-800 rounded-2xl shadow gap-2 hover:cursor-pointer"
		hx-get={ url }
		hx-target="#body"
		hx-replace-url="true"
	>
		<div class="flex flex-1 p-6 items-end justify-between">
			<div class="flex flex-col justify-center items-start gap-4">
				@icon
				<div class="text-neutral-800 dark:text-neutral-200 text-[32px] font-bold font-heading leading-10">
					if count > 0 {
						{ fmt.Sprintf("%d", count) }
					} else {
						{ "-" }
					}
				</div>
				<div class="text-zinc-700 dark:text-zinc-200 text-lg whitespace-nowrap">
					{ title }
				</div>
			</div>
			<div class="w-6 h-6 flex ml-auto items-center justify-center bg-primary-surface dark:bg-white rounded-full">
				@SVG("arrow-right", Size(16), Box(24, 24), StrokeColor("white", "black"), FillColor("white", "black"))
			</div>
		</div>
	</div>
}

func isCurrent(ctx context.Context, expect string) bool {
	name := fmt.Sprintf("%s", ctx.Value(CurrentComponent))
	return name == expect
}

templ Body(version string, l10n Localizer, asset AssetLoaderFunc, mainContent templ.Component) {
	<body id="body" hx-ext="sse" sse-connect={ "/events/" + version } sse-close="goodbye">
		<div id="sse" class="hidden" sse-swap="upgrade,hello,tick"></div>
		<div class="flex w-full flex-col md:flex-row lg:flex-row items-start bg-white dark:bg-content-background">
			<div class="hidden lg:flex flex-col px-3 py-8 items-start shrink-0 self-stretch h-screen w-64 sticky top-0 border-r border-gray-30 dark:border-white dark:border-opacity-30">
				<div class="flex flex-col items-start self-stretch gap-14">
					@SVG("diwiselogo", Box(135, 51), Size(51), FillColor("primary-dark", "white"))
					<div class="flex flex-col items-start self-stretch gap-6">
						//@SectionDivider(l10n.Get("overview"))
						@MenuSegment(l10n.Get("home"), "/home", SVG("home", SelectedIcon(isCurrent(ctx, "home"))), asset, isCurrent(ctx, "home"))
						@MenuSegment(l10n.Get("sensors"), "/sensors", SVG("rss", SelectedIcon(isCurrent(ctx, "sensors"))), asset, isCurrent(ctx, "sensors"))
						@MenuSegment(l10n.Get("things"), "/things", SVG("shapes", NoFill(), Box(24, 24), StrokeColor("primary-dark", "zinc-100"), SelectedIconNoFill(isCurrent(ctx, "things"))), asset, isCurrent(ctx, "things"))
						//Hide admin button in menu
						//@MenuSegment(l10n.Get("admin"), "/admin", SVG("hammer", NoFill(), Box(24, 24), StrokeColor("primary-dark", "zinc-100"), SelectedIconNoFill(isCurrent(ctx, "admin"))), asset, isCurrent(ctx, "admin"))
						/*
						@MenuSegment(l10n.Get("functions"), "/functions", "send-to-back", asset, isCurrent(ctx, "functions"))
						<div class="self-stretch px-3.5 py-2.5 rounded-xl justify-between items-center inline-flex">
							<div class="justify-start items-center gap-2 flex">
								@SVG("alert-triangle")
								<div class="text-neutral-800 dark:text-neutral-300 text-base font-bold font-sans leading-normal">Larm</div>
							</div>
							@Badge("5")
						</div>
						@MenuSegment("Integrationer", "/integrations", "cog", asset, isCurrent(ctx, "integrations"))
						*/
					</div>
				</div>
				<div class="flex flex-col mt-auto items-start gap-10">
					//@SectionDivider("Konto")
					//@MenuSegment("Inställningar", "/settings", SVG("settings-outline"), asset, isCurrent(ctx, "settings"))
					<div class="font-bold">
						@MenuSegment(l10n.Get("logout"), "/logout", SVG("log-out"), asset, false)
					</div>
					@NewDarkModeToggle(false, asset, l10n)
				</div>
			</div>

			//Md menu
			<div class="h-screen w-20 hidden md:flex lg:hidden flex-col px-3 py-8 justify-between items-start shrink-0 self-stretch sticky top-0 border-r border-gray-30 dark:border-white dark:border-opacity-30">
				<div class="flex flex-col items-start self-stretch gap-14">
					@SVG("diwise", Box(24, 24), Size(51))
					<div class="flex flex-col items-start gap-6">
						<div class="relative group">
							@MenuSegment(l10n.Get("home"), "/home", SVG("home", SelectedIcon(isCurrent(ctx, "home"))), asset, isCurrent(ctx, "home"))
							@TooltipSide(l10n.Get("home"))
						</div>
						<div class="relative group">
							@MenuSegment(l10n.Get("sensors"), "/sensors", SVG("rss", SelectedIcon(isCurrent(ctx, "sensors"))), asset, isCurrent(ctx, "sensors"))
							@TooltipSide(l10n.Get("sensors"))
						</div>
						<div class="relative group">
							@MenuSegment(l10n.Get("things"), "/things", SVG("shapes", NoFill(), Box(24, 24), StrokeColor("primary-dark", "zinc-100"), SelectedIconNoFill(isCurrent(ctx, "things"))), asset, isCurrent(ctx, "things"))
							@TooltipSide(l10n.Get("things"))
						</div>
						/*<div class="relative group">
							@MenuSegment(l10n.Get("admin"), "/admin", SVG("hammer", NoFill(), Box(24, 24), StrokeColor("primary-dark", "zinc-100"), SelectedIconNoFill(isCurrent(ctx, "admin"))), asset, isCurrent(ctx, "admin"))
							@TooltipSide(l10n.Get("admin"))
						</div>*/
					</div>
				</div>
				<div class="flex flex-col flex-1 items-start justify-end self-stretch gap-10">
					<div class="relative group">
						@MenuSegment(l10n.Get("logout"), "/logout", SVG("log-out"), asset, false)
						@TooltipSide(l10n.Get("logout"))
					</div>
					@NewDarkModeToggleMdMenu(false, asset)
				</div>
			</div>
			//Md menu end

			//Sm menu
			<div class="md:hidden flex flex-row px-6 py-4 shadow-md sticky top-0 w-full bg-white dark:bg-gray-900 z-50 items-center gap-6">
					<div class="flex items-center gap-6">
						<div class="relative group">
							@MenuSegment(l10n.Get("home"), "/home", SVG("home", SelectedIcon(isCurrent(ctx, "home"))), asset, isCurrent(ctx, "home"))
							@Tooltip(l10n.Get("home"))
						</div>
						<div class="relative group">
							@MenuSegment(l10n.Get("sensors"), "/sensors", SVG("rss", SelectedIcon(isCurrent(ctx, "sensors"))), asset, isCurrent(ctx, "sensors"))
							@Tooltip(l10n.Get("sensors"))
						</div>
						<div class="relative group">
							@MenuSegment(l10n.Get("things"), "/things", SVG("shapes", NoFill(), Box(24, 24), StrokeColor("primary-dark", "zinc-100"), SelectedIconNoFill(isCurrent(ctx, "things"))), asset, isCurrent(ctx, "things"))
							@Tooltip(l10n.Get("things"))
						</div>
						/*<div class="relative group">
							@MenuSegment(l10n.Get("admin"), "/admin", SVG("hammer", NoFill(), Box(24, 24), StrokeColor("primary-dark", "zinc-100"), SelectedIconNoFill(isCurrent(ctx, "admin"))), asset, isCurrent(ctx, "admin"))
							@Tooltip(l10n.Get("admin"))
						</div>*/
					</div>
					<div class="flex items-center gap-6 ml-auto">
						<div class="relative group">
							@MenuSegment(l10n.Get("logout"), "/logout", SVG("log-out"), asset, false)
							@Tooltip(l10n.Get("logout"))
						</div>
						@NewDarkModeToggleMdMenu(false, asset)
					</div>
				
			</div>
			//Sm menu end

			<div class="flex flex-col flex-1 items-start py-8 px-10 gap-20" id="main-content">
				@mainContent
			</div>
		</div>
	</body>
	<script nonce={ csp.Nonce(ctx) }>

		function setTheme(theme) {
			if (theme === 'dark') {
				document.body.classList.add('dark');
				localStorage.theme = 'dark';
			} else {
				document.body.classList.remove('dark');
				localStorage.theme = 'light';
			}

			document.cookie = `theme=${theme}; path=/; max-age=31536000;`;

			const isDark = document.body.classList.contains('dark');

			if (typeof updateMapForTheme === 'function') {
				updateMapForTheme(isDark);  
			}
		}

		function reloadPage() {
			document.location.replace(document.location.href)
		}

		document.body.addEventListener('htmx:sseClose', (evt) => {
			if (evt.detail.type === "message") {
				console.info('sse closed with goodbye message: reloading page in 2 seconds ...')
				setTimeout(reloadPage, 2000)
			}
		})

		document.body.addEventListener('htmx:sseMessage', (evt) => {
			//console.info('sse message: ' + JSON.stringify(evt.detail.data))
		})

		function onPageLoad() {
			if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				document.body.classList.add('dark')
			} else {
				document.body.classList.remove('dark')
			}
			document.querySelectorAll('.toggle-light').forEach(element => {
				element.addEventListener('click', () => setTheme('light'));
			});
			document.querySelectorAll('.toggle-dark').forEach(element => {
				element.addEventListener('click', () => setTheme('dark'));
			});
		}

		onPageLoad()

	</script>
}
