package components

import (
	"fmt"
	"github.com/diwise/diwise-web/internal/pkg/presentation/locale"
)

templ StatisticsPassage(l10n locale.Localizer, model ThingDetailsViewModel) {
	//Statistik
	<div class="flex flex-col items-start self-stretch gap-6 py-6 pl-9 text-secondary-dark dark:text-secondary">
		<div class="flex items-center w-full justify-between">
			<div class="flex flex-col gap-2">
				<div class="">{ l10n.Get("numberofpassagestoday") }</div>
				<div
					class="text-3xl font-bold"
					hx-get={ fmt.Sprintf("/components/things/measurements/%s/current", model.Thing.Type) }
					hx-include="#sensorMeasurementTypes"
					hx-trigger="load, every 60s"
				>0 st</div>
				<input type="hidden" class="filter" id="sensorMeasurementTypes" name="sensorMeasurementTypes" value={ peopleCounterSensor(model.Measurements) }/>
			</div>
			<div class="flex items-center gap-6">
				@FilterStatistics(l10n, model)
				/*<div class="flex flex-col items-start gap-2">
					<div class="text-primary-dark font-bold">
						&nbsp;
					</div>
					<div class="">
						@graphTableButtons(l10n, "/components/sensors/list")
					</div>
				</div>*/
			</div>
		</div>
		@StatisticsData(l10n, StatisticsPassageGraph(l10n, model), StatisticsPassageTable(l10n, model), model.TableView)
	</div>
}

func PassagesChart(datasets []ChartDataset) templ.Component {
	minvalue := uint(0)
	stepsize := uint(1)
	cfg := NewChartConfiguration("bar", false, &minvalue, nil, &stepsize)
	cfg.Timeseries(true)
	cfg.Add(datasets...)

	return Chart("measurement-chart", "", cfg)
}

templ StatisticsPassageGraph(l10n locale.Localizer, model ThingDetailsViewModel) {
	<div id="graphView" class="w-full" style="height: 40vh; position: relative;">
		<canvas id="measurement-chart"></canvas>
		<div id="measurementCharts" style="display:none;"></div>
	</div>
}

templ StatisticsPassageTable(l10n locale.Localizer, model ThingDetailsViewModel) {
	<table class="table-auto min-w-full text-sm text-left dark:bg-content-background dark:text-white">
		<thead class="border-b border-primary-dark dark:border-white">
			<tr>
				<th class="px-6 py-3">{ l10n.Get("time") }</th>
				<th class="px-6 py-3">{ l10n.Get("numberofpassages") }</th>
			</tr>
		</thead>
		<tbody>
			//TODO: Här ska mätningar listas
			for _, measurement := range model.Measurements {
				@StatisticsPassageTableRow(l10n, measurement)
			}
		</tbody>
		<tfoot>
			<tr>
				<td colspan="6">
					//@Paging(l10n, model.Pageing)
				</td>
			</tr>
		</tfoot>
	</table>
}

templ StatisticsPassageTableRow(l10n locale.Localizer, thing MeasurementViewModel) {
	<tr class="border-b border-gray-30 border-opacity-70 hover:bg-background-100 dark:border-white dark:bg-opacity-20">
		<td class="px-6 py-3">Tid</td>
		<td class="px-6 py-3">Antal passager</td>
	</tr>
}
