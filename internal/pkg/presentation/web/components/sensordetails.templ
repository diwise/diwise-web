package components

import (
	"github.com/diwise/diwise-web/internal/pkg/presentation/locale"
	"github.com/diwise/diwise-web/internal/pkg/presentation/web/assets"
	"fmt"
)

type SensorDetailsViewModel struct {
	DeviceID          string
	Name              string
	Latitude          float64
	Longitude         float64
	DeviceProfileName string
	Tenant            string
	Description       string
	Active            bool
}

templ SensorDetails(localizer locale.Localizer, asset assets.AssetLoaderFunc, sensor SensorDetailsViewModel) {
	<div class="flex items-center justify-between pb-4">
		<div class="flex items-center gap-6 align-middle">
			<h1 class="text-black dark:text-white text-2xl font-bold font-heading leading-loose">{ sensor.Name }</h1>
			if sensor.Active {
				@Label("Aktiv", sensor.Active)
			} else {
				@Label("Inaktiv", sensor.Active)
			}
		</div>
		<div class="text-white dark:text-[#1F1F25] text-base font-bold font-sans leading-normal">
			<button
				class="w-auto h-10 pl-[18px] pr-4 py-2 bg-[#1C1C28F2] bg-opacity-95 dark:bg-[white] rounded-xl flex items-center gap-2 cursor-pointer"
				hx-get={ string(templ.URL(fmt.Sprintf("/components/sensors/details?id=%s&mode=edit", sensor.DeviceID))) }
				hx-target="#sensor-view"
				hx-trigger="click"
			>
				<div class="w-[20px] h-[20px] dark:stroke-[#1F1F25]">
					@SVG("pen", Box(24, 24), NoFill(), StrokeColor("white", "[#1F1F25]"), Stroke(templ.Attributes{"stroke-width": "1"}))
				</div>
				Redigera
			</button>
		</div>
	</div>
	<div class="w-full flex py-6 gap-10">
		//Yttersta diven
		<div class="flex flex-col items-start gap-20 flex-[1_0_0]">
			//Uppgifter och larm
			<div class="flex flex-col items-start self-stretch">
				//Uppgifter
				<div class="flex items-center gap-3 self-stretch">
					//Rubrik
					@SVG("info", Size(24), NoFill(), Box(24, 24), StrokeColor("[#1F1F25]", "zinc-100"), Stroke(templ.Attributes{"stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round"}))
					<h2 class="font-heading text-xl font-bold dark:text-white">Uppgifter</h2>
					<div class="h-px border-t border-[#1C1C284D] w-full dark:border-[#FFFFFF4D]"></div>
				</div>
				<div class="flex flex-col items-start self-stretch gap-6 py-6 px-9 text-[#444450] dark:text-[#E5E5E5]">
					//Innehåll Uppgifter
					<div class="flex flex-start gap-2">
						<div class="">Namn</div>
						<div class="font-bold">{ sensor.Name }</div>
					</div>
					<div class="flex flex-start gap-2">
						<div class="">Sensortyp</div>
						<div class="font-bold">{ sensor.DeviceProfileName }</div>
					</div>
					<div class="flex flex-start gap-2">
						<div class="">Organisation</div>
						<div class="font-bold">{ sensor.Tenant }</div>
					</div>
					<div class="flex flex-col gap-2">
						<div class="">Beskrivning</div>
						<div class="font-bold">{ sensor.Description }</div>
					</div>
				</div>
			</div>
			<div class="flex flex-col items-start self-stretch">
				//Larm
				<div class="flex items-center gap-3 self-stretch">
					//Rubrik larm
					@SVG("alert-triangle", Size(24))
					<h2 class="font-heading text-xl font-bold dark:text-white">Larm</h2>
					<div class="h-px border-t border-[#1C1C284D] w-full dark:border-[#FFFFFF4D]"></div>
				</div>
				<div class="flex flex-col items-start self-stretch gap-6 py-6 px-9">
					//Tabell larm
					<table class="table-auto w-full border-collapse border outline-[#1C1C284D] dark:outline-[#FFFFFF4D] outline outline-1 overflow-hidden rounded-2xl text-[#444450] dark:text-[#E5E5E5]">
						<thead>
							<tr class="bg-[#F0F0F0] dark:bg-[#1F1F25] font-bold">
								<td class="px-6 py-3">Starttid</td>
								<td class="px-6 py-3">Typ</td>
								<td class="px-6 py-3">Status</td>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td class="px-6 py-3">2024-05-30, 14:22</td>
								<td class="px-6 py-3">07.00</td>
								<td class="px-6 py-3">07.00</td>
							</tr>
							<tr>
								<td class="px-6 py-3">2024-05-29, 12:20</td>
								<td class="px-6 py-3">07.00</td>
								<td class="px-6 py-3">07.00</td>
							</tr>
							<tr>
								<td class="px-6 py-3">2024-05-28, 10:32</td>
								<td class="px-6 py-3">07.00</td>
								<td class="px-6 py-3">07.00</td>
							</tr>
							<tr>
								<td class="px-6 py-3">2024-05-27, 14:22</td>
								<td class="px-6 py-3">07.00</td>
								<td class="px-6 py-3">07.00</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="border-l border-[#1C1C284D] dark:border-[#FFFFFF4D] h-auto"></div> //Vertikal divider mellan uppgifter och position
		<div class="flex flex-col items-start gap-20 flex-[1_0_0]">
			<div class="flex flex-col items-start self-stretch">
			//Karta
				<div class="flex items-center gap-3 self-stretch">
					//Position rubrik
					@SVG("map-pin", Size(24), NoFill(), Box(24, 24), StrokeColor("[#1F1F25]", "zinc-100"), Stroke(templ.Attributes{"stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round"}))
					<h2 class="font-heading text-xl font-bold dark:text-white">Position</h2>
					<div class="h-px border-t border-[#1C1C284D] w-full dark:border-[#FFFFFF4D]"></div>
				</div>
				<div class="flex flex-col items-start self-stretch gap-6 py-6 px-9 text-[#444450] dark:text-[#E5E5E5]">
					//
					<div class="flex flex-start gap-2">
						<div class="">Latitud</div>
						<div class="font-bold">{ fmt.Sprintf("%f", sensor.Latitude) }</div>
					</div>
					<div class="flex flex-start gap-2">
						<div class="">Longitud</div>
						<div class="font-bold">{ fmt.Sprintf("%f", sensor.Longitude) }</div>
					</div>
					@Map()
				</div>
			</div>
		</div>
	</div>
}

templ EditSensorDetails(localizer locale.Localizer, asset assets.AssetLoaderFunc, sensor SensorDetailsViewModel) {
	<script>
        document.getElementById('sensorType').addEventListener('change', function() {
            var measurementSelect = document.getElementById('measurementType');
            var selectedOption = this.value;

            // Aktivera andra dropdown
            measurementSelect.disabled = false;

            // Exempeldata, dessa kan komma från en server beroende på valt alternativ i första dropdown
            var options = {
                'option1': ['Mätning 1-1', 'Mätning 1-2'],
                'option2': ['Mätning 2-1', 'Mätning 2-2'],
                'option3': ['Mätning 3-1', 'Mätning 3-2']
            };

            // Rensa tidigare options
            measurementSelect.innerHTML = '';

            // Lägg till ett standardalternativ
            measurementSelect.appendChild(new Option('Välj ett alternativ', ''));

            // Lägg till nya options beroende på första dropdowns val
            if (options[selectedOption]) {
                options[selectedOption].forEach(function(measurement) {
                    measurementSelect.appendChild(new Option(measurement, measurement));
                });
            }
        });
    </script>
	<div class="flex items-center justify-between pb-4">
		<h1 class="text-black dark:text-white text-2xl font-bold font-heading leading-loose">{ sensor.Name }</h1>
	</div>
	<form action="/components/sensors/details" method="post">
		<input type="hidden" name="id" value={ sensor.DeviceID }/>
		<div class="w-full flex py-6 gap-10 text-[#1F1F25] dark:text-white">
			<div class="flex flex-col items-start gap-20 flex-[1_0_0]">
				//Status och uppgifter
				<div class="flex flex-col items-start self-stretch">
					<div class="flex items-center gap-3 self-stretch">
						//Rubrik uppgifter
						@SVG("info", Size(24), NoFill(), Box(24, 24), StrokeColor("[#1F1F25]", "zinc-100"), Stroke(templ.Attributes{"stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round"}))
						<h2 class="font-heading text-xl font-bold">Uppgifter</h2>
						<div class="h-px border-t border-[#1C1C284D] w-full dark:border-[#FFFFFF4D]"></div>
					</div>
					<div class="flex flex-col items-start self-stretch gap-6 py-6 px-9">
						//Uppgifter
						<div class="flex flex-start gap-10 self-stretch">
							<div class="flex flex-col gap-2 flex-[1_0_0]">
								<div class="font-bold">Namn</div>
								<input type="text" value={ sensor.Name } class="w-full h-[40px] border border-[#0A0C0F] dark:border-[#FFFFFF80] dark:bg-[#1C1C2880] focus:ring-0 placeholder-gray-500 rounded-xl p-2" placeholder="Namn"/>
							</div>
							<div class="flex flex-col gap-2 flex-[1_0_0]">
								<div class="font-bold">Organisation</div>
								<div class="border border-[#0A0C0F] rounded-xl">
									<label for="organisation" class="hidden block text-sm font-medium text-gray-700">Välj ett alternativ</label>
									<select id="organisation" name="organisation" class="cursor-pointer block w-full pl-3 pr-3 py-2 text-base dark:border dark:border-[#FFFFFF80] dark:bg-[#1C1C2880] focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-xl bg-white">
										<option>Välj ett alternativ</option>
										<option value="alt1">Alternativ 1 från backend</option>
										<option value="alt2">Alternativ 2</option>
										<option value="alt3">Alternativ 3</option>
									</select>
								</div>
							</div>
						</div>
						<div class="flex flex-start gap-10 self-stretch">
							<div class="flex flex-col gap-2 flex-[1_0_0]">
								<div class="font-bold">Sensortyp</div>
								<div class="border border-[#0A0C0F] rounded-xl">
									<label for="sensorType" class="hidden block text-sm font-medium text-gray-700">Välj ett alternativ</label>
									<select id="sensorType" name="sensorType" class="cursor-pointerblock w-full pl-3 pr-3 py-2 text-base dark:border dark:border-[#FFFFFF80] dark:bg-[#1C1C2880] focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-xl bg-white">
										<option>Välj ett alternativ</option>
										<option value="option1">Alternativ 1 från backend</option>
										<option value="option2">Alternativ 2</option>
										<option value="option3">Alternativ 3</option>
									</select>
								</div>
							</div>
							<div class="flex flex-col gap-2 flex-[1_0_0]">
								<div class="font-bold">Mättyp</div>
								<div class="border border-[#0A0C0F] rounded-xl">
									<label for="measurementType" class="hidden block text-sm font-medium text-gray-700">Välj ett alternativ</label>
									<select id="measurementType" name="measurementType" class="cursor-pointer block w-full pl-3 pr-3 py-2 text-base dark:border dark:border-[#FFFFFF80] dark:bg-[#1C1C2880] focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 rounded-xl bg-white" disabled>
										<option>Välj ett alternativ</option>
									</select>
								</div>
							</div>
						</div>
						<div class="flex flex-start gap-10 self-stretch">
							<div class="flex flex-col gap-2 flex-[1_0_0]">
								<div class="font-bold">Beskrivning</div>
								<textarea type="text" class="w-full min-h-[150px] border border-[#0A0C0F] font-bold dark:border dark:border-[#FFFFFF80] dark:bg-[#1C1C2880] focus:ring-0 placeholder-gray-500 rounded-xl p-2" placeholder="beskrivning">
									{ sensor.Description }
								</textarea>
							</div>
						</div>
					</div>
				</div>
				<div class="flex flex-col items-start self-stretch">
					//Status
					<div class="flex items-center gap-3 self-stretch">
						//Rubrik
						@SVG("circle-check", Size(24), NoFill(), Box(24, 24), StrokeColor("[#1F1F25]", "zinc-100"), Stroke(templ.Attributes{"stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round"}))
						<h2 class="font-heading text-xl font-bold">Status</h2>
						<div class="h-px border-t border-[#1C1C284D] w-full dark:border-[#FFFFFF4D]"></div>
					</div>
					<div class="flex flex-col items-start self-stretch gap-6 py-6 px-9">
						//Status
						<label for="custom-checkbox" class="flex items-center justify-between w-full cursor-pointer">
							<span class="font-bold text-gray-900 dark:text-gray-300">Aktivera sensor</span>
							<div class="flex items-center">
								<input type="checkbox" name="active" id="custom-checkbox" class="sr-only peer" checked?={ sensor.Active }/>
								<div class="w-[24px] h-[24px] bg-white rounded border border-gray-400 peer-checked:bg-emerald-800 peer-checked:border-emerald-800 flex justify-center items-center">
									<svg class="fill-none w-[24px] h-[24px] stroke-white stroke-2 opacity-100 peer-checked:opacity-0 transition-opacity">
										@templ.Raw(iconSVG("check"))
									</svg>
								</div>
							</div>
						</label>
						<div class="w-1/2">Info om vad som händer om man inaktiverar en sensor.</div>
					</div>
				</div>
			</div>
			<div class="border-l border-[#1C1C284D] dark:border-[#FFFFFF4D] h-auto"></div> //Vertikal divider mellan uppgifter och position
			<div class="flex flex-col items-start gap-20 flex-[1_0_0]">
				<div class="flex flex-col items-start self-stretch">
				//Karta
					<div class="flex items-center gap-3 self-stretch">
						//Position rubrik
						@SVG("map-pin", Size(24), NoFill(), Box(24, 24), StrokeColor("[#1F1F25]", "zinc-100"), Stroke(templ.Attributes{"stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round"}))
						<h2 class="font-heading text-xl font-bold">Position</h2>
						<div class="h-px border-t border-[#1C1C284D] w-full dark:border-[#FFFFFF4D]"></div>
					</div>
					<div class="flex flex-col items-start self-stretch gap-6 py-6 px-9">
						//Position
						<div class="flex flex-start gap-10 self-stretch">
							<div class="flex flex-col gap-2 flex-[1_0_0]">
								<div class="font-bold">Latitud</div>
								<input type="number" value={ fmt.Sprintf("%f", sensor.Latitude) } class="w-auto h-[40px] border border-[#0A0C0F] dark:border-[#FFFFFF80] dark:bg-[#1C1C2880] font-bold focus:ring-0 placeholder-gray-500 rounded-xl p-2" placeholder="Latitud"/>
							</div>
							<div class="flex flex-col gap-2 flex-[1_0_0]">
								<div class="font-bold">Longitud</div>
								<input type="number" value={ fmt.Sprintf("%f", sensor.Longitude) } class="w-auto h-[40px] border border-[#0A0C0F] dark:border-[#FFFFFF80] dark:bg-[#1C1C2880] font-bold focus:ring-0 placeholder-gray-500 rounded-xl p-2" placeholder="Longitud"/>
							</div>
						</div>
						@Map()
					</div>
				</div>
			</div>
		</div>
		<div class="h-px border-t border-[#1C1C284D] w-full"></div>
		<div class="flex justify-between items-center py-6">
			<button class="text-right w-auto h-10 pl-[18px] gap-2 pr-4 py-2 bg-err-prim-surf rounded-xl flex items-center cursor-pointer">
				<div class="w-[20px] h-[20px]">
					@SVG("trashcan", Size(20), NoFill(), Box(24, 24), StrokeColor("[#971A1A]", "[#971A1A]"), Stroke(templ.Attributes{"stroke-width":"2", "stroke-linecap":"round", "stroke-linejoin":"round"}))
				</div>
				//<svg class="fill-none dark:fill-none h-6 w-6 stroke-[#971A1A] dark:stroke-zinc-100"></svg>
				<div class="text-[#971A1A] text-base font-sans font-bold leading-normal">
					Radera
				</div>
			</button>
			<div class="flex items-end gap-4">
				<button class="text-right w-auto h-10 pl-[18px] pr-4 py-2 border-[#1C1C284D] border-2 dark:border-[#FFFFFF4D] rounded-xl flex items-center cursor-pointer">
					<div class="text-[#444450] dark:text-[#E5E5E5] text-base font-sans font-bold leading-normal">
						Avbryt
					</div>
				</button>
				<button type="submit" class="text-right w-auto h-10 pl-[18px] pr-4 py-2 bg-[#1C1C28F2] bg-opacity-95 dark:bg-[#FFFFFFF2] rounded-xl flex items-center cursor-pointer">
					<div class="text-white dark:text-[#1F1F25] text-base font-sans font-bold leading-normal">
						Spara
					</div>
				</button>
			</div>
		</div>
	</form>
}
