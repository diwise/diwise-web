package components

import (
	"github.com/diwise/diwise-web/internal/pkg/presentation/locale"
	"github.com/diwise/diwise-web/internal/pkg/presentation/web/assets"
)

templ OverviewCards(l10n locale.Localizer, asset assets.AssetLoaderFunc, stats StatisticsViewModel) {
	@OverviewCard(l10n.Get("numberofsensors"), "/sensors", stats.Total, SVG("rss", Size(32)), asset)
	@OverviewCard(l10n.Get("activesensors"), "/sensors?active=true", stats.Active, SVG("rss", Size(32), OKStyle()), asset)
	@OverviewCard(l10n.Get("inactivesensors"), "/sensors?active=false", stats.Inactive, SVG("rss", Size(32), AlertStyle()), asset)
	@OverviewCard(l10n.Get("unknownsensors"), "/sensors?type=unknown", stats.Unknown, SVG("rss", Size(32), WarningStyle()), asset)
}

type HomeViewModel struct {
	UsageDatasets []ChartDataset
	XScaleMax     uint
}

templ Home(l10n locale.Localizer, asset assets.AssetLoaderFunc, viewModel HomeViewModel) {
	<div class="p-8">
		<div class="grid grid-cols-4 gap-8">
			<div class="col-span-2">
				<h1 class="text-black dark:text-white text-2xl font-bold font-heading leading-loose">{ l10n.Get("overview") }</h1>
				<div hx-get="/components/home/statistics" hx-trigger="load, every 1m" class="grid grid-cols-2 gap-10">
					@OverviewCards(l10n, asset, StatisticsViewModel{})
				</div>
			</div>
			<div class="col-span-2">
				<div class="text-black dark:text-white text-2xl font-bold font-heading leading-loose">
					<h2>{ l10n.Get("measurementperday") }</h2>
				</div>
				<div class="p-8 bg-white dark:bg-gray-800 rounded-[15px] shadow justify-start items-start gap-4">
					<canvas id="usage-chart"></canvas>
					<div hx-get="/components/home/usage" hx-trigger="load, every 60m" style="display:none;"></div>
				</div>
			</div>
			//Alerts, not in MVP
			/*<div class="col-span-4">
				<div class="col-span-12 justify-start items-center gap-4">
					<div class="flex gap-4 items-center">
						<div class="text-black dark:text-white text-2xl font-bold font-heading leading-loose">{ l10n.Get("alerts") }</div>
						@Badge("5")
					</div>
				</div>
				@Table(
					HeaderRow(TableHeaderText("Namn"), TableHeaderText("Status"), TableHeaderText("DevEUI"), TableHeaderText("Nät"), TableHeaderText("Batterinivå"), TableHeaderText("Senaste Värde"), TableHeaderText("Larm")),
					TableData(
						TableRow(
							TextCell("Fregattgatan 2"), LabelCell("Aktiv", true), TextCell("70b3d52c0001a4b4"), TextCell("LoRa"), TextCell("25%"), TextCell("2024-01-29, 12:00"), Cell(SVG("alert-triangle", Size(24), AlertStyle())),
						),
						TableRow(
							TextCell("air-sens-7"), LabelCell("Inaktiv", false), TextCell("a81758fffe051d02"), TextCell("LoRa"), TextCell("25%"), TextCell("2024-01-29, 12:00"), TextCell(""),
						),
						TableRow(
							TextCell("06076898"), LabelCell("Aktiv", true), TextCell("8c83fc05005cb9e2"), TextCell("LoRa"), TextCell("25%"), TextCell("2024-01-29, 12:00"), TextCell(""),
						),
						TableRow(
							TextCell("EM500_UDL_1"), LabelCell("Aktiv", true), TextCell("24e124126d154470"), TextCell("LoRa"), TextCell("25%"), TextCell("2024-01-29, 12:00"), Cell(SVG("alert-triangle", Size(24), AlertStyle())),
						),
						TableRow(
							TextCell("NIAB_lidar_50001c"), LabelCell("Aktiv", true), TextCell("3231383771308416"), TextCell("LoRa"), TextCell("25%"), TextCell("2024-01-29, 12:00"), Cell(SVG("alert-triangle", Size(24), AlertStyle())),
						),
					),
					DataTableFooter("7", "home", l10n), l10n,
				)
			</div>*/
		</div>
	</div>
}

func UsageChart(xScaleMax uint, datasets []ChartDataset) templ.Component {
	cfg := NewChartConfiguration("bar")

	var (
		xScaleType          string = "linear"
		xScalePosition      string = "bottom"
		xScaleMin           uint   = 1
		xScaleTicksStepSize uint   = 1
	)

	cfg.Options.Scales.X.Type = &xScaleType
	cfg.Options.Scales.X.Position = &xScalePosition
	cfg.Options.Scales.X.Min = &xScaleMin
	cfg.Options.Scales.X.Max = &xScaleMax
	cfg.Options.Scales.X.Ticks.StepSize = &xScaleTicksStepSize

	cfg.Add(datasets...)

	return Chart("usage-chart", "", cfg)
}
