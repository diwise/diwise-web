package components

import (
    "fmt"
)

type mapData struct {
	Latitude  float64
	Longitude float64
	Zoom      int
    CurrentView string
}

func newMapData(lat, lon float64) mapData {
	md := mapData{Latitude: lat, Longitude: lon, Zoom: 15}

	if md.Latitude < 1 {
		md.Latitude = 62.3908
		md.Longitude = 17.3069
		md.Zoom = 9
        md.CurrentView = "sensor"
	}

	return md
}

func NewFeatureCollection(features []Feature) FeatureCollection {
	return FeatureCollection{
		Type:     "FeatureCollection",
		Features: features,
	}
}

type FeatureCollection struct {
	Type     string    `json:"type"`
	Features []Feature `json:"features"`
}

func NewFeature(point Point) Feature {
	return Feature{
		Type:       "Feature",
		Geometry:   point,
		Properties: make(map[string]any),
	}
}

type Feature struct {
	Type       string         `json:"type"`
	Geometry   Point          `json:"geometry"`
	Properties map[string]any `json:"properties"`
}

func (f *Feature) AddProperty(key string, value any) {
	f.Properties[key] = value
}

func NewPoint(lat, lon float64) Point {
	return Point{
		Type:        "Point",
		Coordinates: []float64{lon, lat},
	}
}

type Point struct {
	Type        string    `json:"type"`
	Coordinates []float64 `json:"coordinates"`
}

templ Map(mapsize string, showPopup bool, data mapData, featureCollection ...FeatureCollection) {
    <div id="map" 
        data-map={ templ.JSONString(data) } 
        data-features={ templ.JSONString(featureCollection) }
        data-show-popup={ fmt.Sprintf("%t", showPopup) }
        if mapsize == "small" {
            class="w-full z-0 h-[30vh]"
        } else if mapsize == "medium" {
            class="w-full z-0 h-[50vh]"
        } else if mapsize == "large" {
            class="w-full z-0 h-[65vh]"
        }></div>
	<script>
    (() => {
        const m = document.getElementById('map');
        const mapData = JSON.parse(m.getAttribute('data-map'));
        const geodata = JSON.parse(m.getAttribute('data-features'));
        const showPopup = m.getAttribute('data-show-popup') === 'true';

        var map = L.map('map').setView([mapData.Latitude, mapData.Longitude], mapData.Zoom);

        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
            maxZoom: 19,
            //attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
        }).addTo(map);

        var sensorIcon = L.icon({
            iconUrl: '/assets/092df4bb8f2c8826dd2f1b5c79a16a145d421f40d28c4656a6205cd4816766ac/sensor.svg',  
            iconSize: [40, 40],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        
        var trashcanIcon = L.icon({
            iconUrl: '/assets/9bd4aeb2359eb2bc87a6efc62db884c7beea143a0f7f822330b075bb9e613922/trashcan.svg',  
            iconSize: [40, 40],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var lifebuoyIcon = L.icon({
            iconUrl: '/assets/70586d0ec04481509c957c9c53e29e8dff01ccdff43490521c6748cef7301dea/lifebuoy.svg',
            iconSize: [40, 40],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var thermometerIcon = L.icon({
            iconUrl: '/assets/f1fb89b6ac04649840b18d82bd99c07e0bd15dabb4e1a571d5268f89e7b90c33/thermometer.svg',
            iconSize: [40, 40],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var passageIcon = L.icon({
            iconUrl: '/assets/16fbeaa496501a4ac0a1b54d2530258c2b4b74090b6703aebdf94d3a3ec3766d/door.svg',
            iconSize: [40, 40],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var drainIcon = L.icon({
            iconUrl: '/assets/4b6f555f94417954a8a1d3eace3803fed8bed1a57821134a6f75079d85b4989b/drain.svg',
            iconSize: [40, 40],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var layers = {};

        if (geodata && Array.isArray(geodata)) {
            geodata.forEach(data => {
                data.features.forEach(feature => { 
                    var type = feature.properties.type;
                    var icon;

                    switch (type) {
                        case 'sensor':
                            icon = sensorIcon;
                            break;
                        case 'trashcan':
                        case 'wastecontainer':
                            icon = trashcanIcon;
                            break;
                        case 'lifebuoy':
                            icon = lifebuoyIcon;
                            break;
                        case 'thermometer':
                            icon = thermometerIcon;
                            break;
                        case 'sewer':
                        case 'sewagepumpingstation':
                        case 'combinedsewageoverflow':
                        case 'drain':
                            icon = drainIcon;
                            break;
                        case 'passage':
                            icon = passageIcon;
                            break;
                        default:
                            icon = sensorIcon;
                    }
                    L.geoJSON(feature, { 
                        pointToLayer: function(feature, latlng) {
                            return L.marker(latlng, { icon: icon });
                        },
                        onEachFeature: function(feature, layer) {
                            if (showPopup) {
                                var cv = mapData.CurrentView;
                                var popupContent = null;
                                if (cv === "sensor") {
                                    popupContent = '<div class="flex flex-col items-start gap-6 py-3 text-base"><div class="flex flex-col items-start self-stretch justify-center gap-6"><div class="flex flex-col items-start gap-2">' +
                                    '<span class="px-2.5 py-1 rounded-full justify-start items-center gap-1.5 ' + (feature.properties.status ? 'bg-primary-green-accent' : 'bg-tertiary-surface') + '"><span class="text-sm font-bold font-sans leading-none ' + (feature.properties.status ? 'text-primary-green' : 'text-primary-dark"') + '">' + (feature.properties.status ? feature.properties.text_active : feature.properties.text_inactive) + '</span></span>' +
                                    '<h2 class="font-heading text-xl font-bold first-letter:uppercase">' + feature.properties.name + '</h2></div><div class="flex flex-col items-start gap-2 text-primary-dark"><div class="flex items-center gap-2">' +
                                    '<div class="font-bold">' + feature.properties.text_deveui + '</div><div class="">' + feature.properties.deveui + '</div></div><div class="flex items-center gap-2">' + 
                                    '<div class="font-bold">' + feature.properties.text_sensortype + '</div><div class="">' + feature.properties.type + '</div></div><div class="flex items-center gap-2">' +
                                    '<div class="font-bold">' + feature.properties.text_batterylevel + '</div><div class="">' + feature.properties.batterylevel + '</div></div><div class="flex items-center gap-2">' +
                                    '<div class="font-bold">' + feature.properties.text_position + '</div><div class="">' + feature.properties.latitude + ', ' + feature.properties.longitude + '</div></div><div class="flex items-center gap-2">' +
                                    '<div class="font-bold">' + feature.properties.text_lastseen + '</div><div class="">' + feature.properties.lastseen + '</div></div></div></div><div class="h-px border-t border-gray-30 w-full"></div>' +		
                                    '<a href="' + feature.properties.url + ' "class="flex justify-center items-center gap-2 rounded-xl cursor-pointer font-bold px-4 py-2 !text-white dark:text-primary-dark bg-primary-surface hover:bg-primary-surface-hover">' + feature.properties.text_moreinformation +
                                    '<div class="w-[20px] h-[20px]"><svg class="stroke-white fill-none h-5 w-5" viewBox="0 0 24 24" stroke-width="2"><path fill-rule="evenodd" d="M4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1Z" clip-rule="evenodd"></path><path fill-rule="evenodd" d="M11.293 4.293a1 1 0 0 1 1.414 0l7 7a1 1 0 0 1 0 1.414l-7 7a1 1 0 0 1-1.414-1.414L17.586 12l-6.293-6.293a1 1 0 0 1 0-1.414Z" clip-rule="evenodd"></path></svg></div></a></div>';
                                } else if (cv === "thing" && feature.properties.type.toLowerCase() === "wastecontainer") {
                                    var colourClass = "bg-background-200";

                                    if (feature.properties.fillinglevel >= 70) {
                                        colourClass = "bg-red-600";
                                    } else if (feature.properties.fillinglevel <= 40) {
                                        colourClass = "bg-green-700";
                                    } else {
                                        colourClass = "bg-orange-600";
                                    }
                                        popupContent = '<div class="flex flex-col items-start gap-6 py-3 text-base"><div class="flex flex-col items-start self-stretch justify-center gap-6"><div class="flex flex-col items-start gap-4 text-primary-dark"><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">' + feature.properties.text_id + '</div><div class="">' + feature.properties.id + '</div></div><div class="flex flex-col items-start justify-center gap-2 self-stretch">' +
                                        '<div class="font-bold text-primary-dark">' + feature.properties.text_fillinglevel + '</div><div class="flex w-full items-center gap-2 text-sm"><div class="w-[75%] bg-background-200 rounded-lg">' +
                                        '<div class="' + colourClass + ' rounded-lg" style="width: ' + feature.properties.fillinglevel + '%; height: 6px;"></div></div>' +
                                        '<div class="text-sm text-right w-auto">' + feature.properties.fillinglevel + '%</div></div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">' + feature.properties.text_position + '</div><div class="">' + feature.properties.latitude + ', ' + feature.properties.longitude + '</div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">' + feature.properties.text_tags + '</div>' +
                                        '<div class="border border-2 border-gray-30 rounded-full px-2 py-1 text-sm text-secondary-dark">' +
                                        'Skönsmon</div><div class="border border-2 border-gray-30 rounded-full px-2 py-1 text-sm text-secondary-dark">' +
                                        '80 l</div></div></div></div><div class="h-px border-t border-gray-30 w-full"></div>' +					
                                        '<a href="' + feature.properties.url + '" class="flex justify-center items-center gap-2 rounded-xl cursor-pointer font-bold px-4 py-2 !text-white bg-primary-surface hover:bg-primary-surface-hover">' +
                                        '' + feature.properties.text_moreinformation + '<div class="w-[20px] h-[20px]"><svg class="stroke-white fill-none h-5 w-5" viewBox="0 0 24 24" stroke-width="2"><path fill-rule="evenodd" d="M4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1Z" clip-rule="evenodd"></path><path fill-rule="evenodd" d="M11.293 4.293a1 1 0 0 1 1.414 0l7 7a1 1 0 0 1 0 1.414l-7 7a1 1 0 0 1-1.414-1.414L17.586 12l-6.293-6.293a1 1 0 0 1 0-1.414Z" clip-rule="evenodd"></path></svg></div></a></div>';
                                } else if (cv === "thing" && feature.properties.type.toLowerCase() === "combinedsewageoverflow") {
                                    popupContent = '<div class="flex flex-col items-start gap-6 py-3 text-base"><div class="flex flex-col items-start self-stretch justify-center gap-6"><div class="flex flex-col items-start gap-4 text-primary-dark"><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">' + feature.properties.text_id + '</div><div class="">' + feature.properties.id + '</div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">' + feature.properties.text_overflow + '</div><div class="">' + feature.properties.state + '</div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">' + feature.properties.text_position + '</div><div class="">' + feature.properties.latitude + ', ' + feature.properties.longitude + '</div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">' + feature.properties.text_tags + '</div>' +
                                        '<div class="border border-2 border-gray-30 rounded-full px-2 py-1 text-sm text-secondary-dark">' +
                                        'Skönsmon</div><div class="border border-2 border-gray-30 rounded-full px-2 py-1 text-sm text-secondary-dark">' +
                                        '80 l</div></div></div></div><div class="h-px border-t border-gray-30 w-full"></div>' +					
                                        '<a href="' + feature.properties.url + '" class="flex justify-center items-center gap-2 rounded-xl cursor-pointer font-bold px-4 py-2 !text-white bg-primary-surface hover:bg-primary-surface-hover">' +
                                        '' + feature.properties.text_moreinformation + '<div class="w-[20px] h-[20px]"><svg class="stroke-white fill-none h-5 w-5" viewBox="0 0 24 24" stroke-width="2"><path fill-rule="evenodd" d="M4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1Z" clip-rule="evenodd"></path><path fill-rule="evenodd" d="M11.293 4.293a1 1 0 0 1 1.414 0l7 7a1 1 0 0 1 0 1.414l-7 7a1 1 0 0 1-1.414-1.414L17.586 12l-6.293-6.293a1 1 0 0 1 0-1.414Z" clip-rule="evenodd"></path></svg></div></a></div>';
                                } else {
                                    popupContent = '<div class="flex flex-col items-start gap-6 py-3 text-base"><div class="flex flex-col items-start self-stretch justify-center gap-6"><div class="flex flex-col items-start gap-4 text-primary-dark"><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">ID</div><div class="">' + feature.properties.id + '</div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">Information</div><div class="text-italic">Saknas</div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">Position</div><div class="">' + feature.properties.latitude + ', ' + feature.properties.longitude + '</div></div><div class="flex items-center gap-2">' +
                                        '<div class="font-bold">Taggar</div>' +
                                        '<div class="border border-2 border-gray-30 rounded-full px-2 py-1 text-sm text-secondary-dark">' +
                                        'Skönsmon</div><div class="border border-2 border-gray-30 rounded-full px-2 py-1 text-sm text-secondary-dark">' +
                                        '80 l</div></div></div></div><div class="h-px border-t border-gray-30 w-full"></div>' +					
                                        '<a href="' + feature.properties.url + '" class="flex justify-center items-center gap-2 rounded-xl cursor-pointer font-bold px-4 py-2 !text-white bg-primary-surface hover:bg-primary-surface-hover">' +
                                        '' + feature.properties.text_moreinformation + '<div class="w-[20px] h-[20px]"><svg class="stroke-white fill-none h-5 w-5" viewBox="0 0 24 24" stroke-width="2"><path fill-rule="evenodd" d="M4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1Z" clip-rule="evenodd"></path><path fill-rule="evenodd" d="M11.293 4.293a1 1 0 0 1 1.414 0l7 7a1 1 0 0 1 0 1.414l-7 7a1 1 0 0 1-1.414-1.414L17.586 12l-6.293-6.293a1 1 0 0 1 0-1.414Z" clip-rule="evenodd"></path></svg></div></a></div>';
                                }
                                
                                layer.bindPopup(popupContent);
                                
                            }  
                        }
                    }).addTo(map);
                });
            });
        }

        L.control.scale({ maxWidth: 200, metric: true, imperial: false }).addTo(map);

        function getBoundsCoordinates() {
            var bounds = map.getBounds();

            var southwest = bounds.getSouthWest();
            var northeast = bounds.getNorthEast();
        }

        // Kontrollera hörnkoordinater när kartan laddas och vid varje dragning eller zoomning
        map.on('load moveend zoomend', getBoundsCoordinates);

        /*
        document.querySelectorAll('.map-checkbox').forEach(checkbox => {
            checkbox.onchange = function() {
                var layerGroup = layers[this.id.replace('show', '').toLowerCase()];
                if (this.checked) {
                    layerGroup.addTo(map);
                } else {
                    map.removeLayer(layerGroup);
                }
            }
        });
        */

    })()
    </script>
}
